   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_get_macro,"ax",@progbits
  11               		.weak	action_get_macro
  13               	action_get_macro:
  14               	.LVL0:
  15               	.LFB21:
  16               		.file 1 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #    include <util/delay.h>
  24:quantum/keymap_common.c **** #    include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "quantum.h"
  30:quantum/keymap_common.c **** 
  31:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
  32:quantum/keymap_common.c **** #    include "backlight.h"
  33:quantum/keymap_common.c **** #endif
  34:quantum/keymap_common.c **** 
  35:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  36:quantum/keymap_common.c **** #    include "process_midi.h"
  37:quantum/keymap_common.c **** #endif
  38:quantum/keymap_common.c **** 
  39:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  40:quantum/keymap_common.c **** 
  41:quantum/keymap_common.c **** #include <inttypes.h>
  42:quantum/keymap_common.c **** 
  43:quantum/keymap_common.c **** /* converts key to action */
  44:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key) {
  45:quantum/keymap_common.c ****     // 16bit keycodes - important
  46:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  47:quantum/keymap_common.c **** 
  48:quantum/keymap_common.c ****     // keycode remapping
  49:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  50:quantum/keymap_common.c **** 
  51:quantum/keymap_common.c ****     action_t action = {};
  52:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
  53:quantum/keymap_common.c **** 
  54:quantum/keymap_common.c ****     (void)action_layer;
  55:quantum/keymap_common.c ****     (void)when;
  56:quantum/keymap_common.c ****     (void)mod;
  57:quantum/keymap_common.c **** 
  58:quantum/keymap_common.c ****     switch (keycode) {
  59:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  60:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  61:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  62:quantum/keymap_common.c ****             break;
  63:quantum/keymap_common.c **** #ifdef EXTRAKEY_ENABLE
  64:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  65:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  66:quantum/keymap_common.c ****             break;
  67:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
  68:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  69:quantum/keymap_common.c ****             break;
  70:quantum/keymap_common.c **** #endif
  71:quantum/keymap_common.c **** #ifdef MOUSEKEY_ENABLE
  72:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  73:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  74:quantum/keymap_common.c ****             break;
  75:quantum/keymap_common.c **** #endif
  76:quantum/keymap_common.c ****         case KC_TRNS:
  77:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  78:quantum/keymap_common.c ****             break;
  79:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX:;
  80:quantum/keymap_common.c ****             // Has a modifier
  81:quantum/keymap_common.c ****             // Split it up
  82:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF);  // adds modifier to key
  83:quantum/keymap_common.c ****             break;
  84:quantum/keymap_common.c **** #ifndef NO_ACTION_FUNCTION
  85:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  86:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  87:quantum/keymap_common.c ****             break;
  88:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX:;
  89:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  90:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  91:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action((int)keycode & 0xFFF);
  92:quantum/keymap_common.c ****             break;
  93:quantum/keymap_common.c **** #endif
  94:quantum/keymap_common.c **** #ifndef NO_ACTION_MACRO
  95:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  96:quantum/keymap_common.c ****             if (keycode & 0x800)  // tap macros have upper bit set
  97:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  98:quantum/keymap_common.c ****             else
  99:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
 100:quantum/keymap_common.c ****             break;
 101:quantum/keymap_common.c **** #endif
 102:quantum/keymap_common.c **** #ifndef NO_ACTION_LAYER
 103:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
 104:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
 105:quantum/keymap_common.c ****             break;
 106:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 107:quantum/keymap_common.c ****             // Layer set "GOTO"
 108:quantum/keymap_common.c ****             when         = (keycode >> 0x4) & 0x3;
 109:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 110:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 111:quantum/keymap_common.c ****             break;
 112:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX:;
 113:quantum/keymap_common.c ****             // Momentary action_layer
 114:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 115:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 116:quantum/keymap_common.c ****             break;
 117:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 118:quantum/keymap_common.c ****             // Set default action_layer
 119:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 120:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 121:quantum/keymap_common.c ****             break;
 122:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 123:quantum/keymap_common.c ****             // Set toggle
 124:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 125:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 126:quantum/keymap_common.c ****             break;
 127:quantum/keymap_common.c **** #endif
 128:quantum/keymap_common.c **** #ifndef NO_ACTION_ONESHOT
 129:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX:;
 130:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 131:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 132:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 133:quantum/keymap_common.c ****             break;
 134:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 135:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 136:quantum/keymap_common.c ****             mod         = mod_config(keycode & 0xFF);
 137:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 138:quantum/keymap_common.c ****             break;
 139:quantum/keymap_common.c **** #endif
 140:quantum/keymap_common.c **** #ifndef NO_ACTION_LAYER
 141:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 142:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 143:quantum/keymap_common.c ****             break;
 144:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 145:quantum/keymap_common.c ****             mod          = mod_config(keycode & 0xF);
 146:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 147:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 148:quantum/keymap_common.c ****             break;
 149:quantum/keymap_common.c **** #endif
 150:quantum/keymap_common.c **** #ifndef NO_ACTION_TAPPING
 151:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 152:quantum/keymap_common.c ****             mod         = mod_config((keycode >> 0x8) & 0x1F);
 153:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 154:quantum/keymap_common.c ****             break;
 155:quantum/keymap_common.c **** #endif
 156:quantum/keymap_common.c **** #ifdef SWAP_HANDS_ENABLE
 157:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 158:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 159:quantum/keymap_common.c ****             break;
 160:quantum/keymap_common.c **** #endif
 161:quantum/keymap_common.c **** 
 162:quantum/keymap_common.c ****         default:
 163:quantum/keymap_common.c ****             action.code = ACTION_NO;
 164:quantum/keymap_common.c ****             break;
 165:quantum/keymap_common.c ****     }
 166:quantum/keymap_common.c ****     return action;
 167:quantum/keymap_common.c **** }
 168:quantum/keymap_common.c **** 
 169:quantum/keymap_common.c **** __attribute__((weak)) const uint16_t PROGMEM fn_actions[] = {
 170:quantum/keymap_common.c **** 
 171:quantum/keymap_common.c **** };
 172:quantum/keymap_common.c **** 
 173:quantum/keymap_common.c **** /* Macro */
 174:quantum/keymap_common.c **** __attribute__((weak)) const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
  17               		.loc 1 174 101 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 174 103 view .LVU1
  24               		.loc 1 174 1 is_stmt 0 view .LVU2
  25 0000 90E0      		ldi r25,0
  26 0002 80E0      		ldi r24,0
  27               	.LVL1:
  28               	/* epilogue start */
  29               		.loc 1 174 1 view .LVU3
  30 0004 0895      		ret
  31               		.cfi_endproc
  32               	.LFE21:
  34               		.section	.text.action_function,"ax",@progbits
  35               		.weak	action_function
  37               	action_function:
  38               	.LVL2:
  39               	.LFB22:
 175:quantum/keymap_common.c **** 
 176:quantum/keymap_common.c **** /* Function */
 177:quantum/keymap_common.c **** __attribute__((weak)) void action_function(keyrecord_t *record, uint8_t id, uint8_t opt) {}
  40               		.loc 1 177 90 is_stmt 1 view -0
  41               		.cfi_startproc
  42               	/* prologue: function */
  43               	/* frame size = 0 */
  44               	/* stack size = 0 */
  45               	.L__stack_usage = 0
  46               		.loc 1 177 91 view .LVU5
  47               	/* epilogue start */
  48               		.loc 1 177 1 is_stmt 0 view .LVU6
  49 0000 0895      		ret
  50               		.cfi_endproc
  51               	.LFE22:
  53               		.section	.text.keymap_key_to_keycode,"ax",@progbits
  54               		.weak	keymap_key_to_keycode
  56               	keymap_key_to_keycode:
  57               	.LVL3:
  58               	.LFB23:
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** // translates key to keycode
 180:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key) {
  59               		.loc 1 180 83 is_stmt 1 view -0
  60               		.cfi_startproc
  61               	/* prologue: function */
  62               	/* frame size = 0 */
  63               	/* stack size = 0 */
  64               	.L__stack_usage = 0
  65               		.loc 1 180 83 is_stmt 0 view .LVU8
  66 0000 972F      		mov r25,r23
 181:quantum/keymap_common.c ****     // Read entire word (16bits)
 182:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
  67               		.loc 1 182 5 is_stmt 1 view .LVU9
  68               	.LBB2:
  69               		.loc 1 182 12 view .LVU10
  70 0002 70E0      		ldi r23,0
  71               		.loc 1 182 12 is_stmt 0 view .LVU11
  72 0004 25E0      		ldi r18,lo8(5)
  73 0006 929F      		mul r25,r18
  74 0008 600D      		add r22,r0
  75 000a 711D      		adc r23,r1
  76 000c 1124      		clr __zero_reg__
  77               	.LVL4:
  78               		.loc 1 182 12 view .LVU12
  79 000e FB01      		movw r30,r22
  80 0010 98E2      		ldi r25,lo8(40)
  81 0012 899F      		mul r24,r25
  82 0014 E00D      		add r30,r0
  83 0016 F11D      		adc r31,r1
  84 0018 1124      		clr __zero_reg__
  85 001a EE0F      		lsl r30
  86 001c FF1F      		rol r31
  87               	.LVL5:
  88               		.loc 1 182 12 view .LVU13
  89 001e E050      		subi r30,lo8(-(keymaps))
  90 0020 F040      		sbci r31,hi8(-(keymaps))
  91               	.LVL6:
  92               		.loc 1 182 12 is_stmt 1 view .LVU14
  93               		.loc 1 182 12 view .LVU15
  94               	/* #APP */
  95               	 ;  182 "quantum/keymap_common.c" 1
  96 0022 8591      		lpm r24, Z+
  97 0024 9491      		lpm r25, Z
  98               		
  99               	 ;  0 "" 2
 100               	.LVL7:
 101               		.loc 1 182 12 view .LVU16
 102               	/* #NOAPP */
 103               	/* epilogue start */
 104               	.LBE2:
 183:quantum/keymap_common.c **** }
 105               		.loc 1 183 1 is_stmt 0 view .LVU17
 106 0026 0895      		ret
 107               		.cfi_endproc
 108               	.LFE23:
 110               		.section	.text.action_for_key,"ax",@progbits
 111               	.global	action_for_key
 113               	action_for_key:
 114               	.LVL8:
 115               	.LFB20:
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 116               		.loc 1 44 54 is_stmt 1 view -0
 117               		.cfi_startproc
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 118               		.loc 1 44 54 is_stmt 0 view .LVU19
 119 0000 CF93      		push r28
 120               	.LCFI0:
 121               		.cfi_def_cfa_offset 3
 122               		.cfi_offset 28, -2
 123 0002 DF93      		push r29
 124               	.LCFI1:
 125               		.cfi_def_cfa_offset 4
 126               		.cfi_offset 29, -3
 127               	/* prologue: function */
 128               	/* frame size = 0 */
 129               	/* stack size = 2 */
 130               	.L__stack_usage = 2
  46:quantum/keymap_common.c **** 
 131               		.loc 1 46 5 is_stmt 1 view .LVU20
  46:quantum/keymap_common.c **** 
 132               		.loc 1 46 24 is_stmt 0 view .LVU21
 133 0004 0E94 0000 		call keymap_key_to_keycode
 134               	.LVL9:
  49:quantum/keymap_common.c **** 
 135               		.loc 1 49 5 is_stmt 1 view .LVU22
  49:quantum/keymap_common.c **** 
 136               		.loc 1 49 15 is_stmt 0 view .LVU23
 137 0008 0E94 0000 		call keycode_config
 138               	.LVL10:
  49:quantum/keymap_common.c **** 
 139               		.loc 1 49 15 view .LVU24
 140 000c EC01      		movw r28,r24
 141               	.LVL11:
  51:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
 142               		.loc 1 51 5 is_stmt 1 view .LVU25
  52:quantum/keymap_common.c **** 
 143               		.loc 1 52 5 view .LVU26
  54:quantum/keymap_common.c ****     (void)when;
 144               		.loc 1 54 5 view .LVU27
  55:quantum/keymap_common.c ****     (void)mod;
 145               		.loc 1 55 5 view .LVU28
  56:quantum/keymap_common.c **** 
 146               		.loc 1 56 5 view .LVU29
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 147               		.loc 1 58 5 view .LVU30
 148 000e 8115      		cp r24,__zero_reg__
 149 0010 21E5      		ldi r18,81
 150 0012 9207      		cpc r25,r18
 151 0014 00F0      		brlo .+2
 152 0016 00C0      		rjmp .L5
 153 0018 8115      		cp r24,__zero_reg__
 154 001a 30E5      		ldi r19,80
 155 001c 9307      		cpc r25,r19
 156 001e 00F0      		brlo .+2
 157 0020 00C0      		rjmp .L6
 158 0022 883E      		cpi r24,-24
 159 0024 9105      		cpc r25,__zero_reg__
 160 0026 00F4      		brsh .L7
 161 0028 803E      		cpi r24,-32
 162 002a 9105      		cpc r25,__zero_reg__
 163 002c 00F0      		brlo .+2
 164 002e 00C0      		rjmp .L8
 165 0030 883A      		cpi r24,-88
 166 0032 9105      		cpc r25,__zero_reg__
 167 0034 00F4      		brsh .L9
 168 0036 853A      		cpi r24,-91
 169 0038 9105      		cpc r25,__zero_reg__
 170 003a 00F0      		brlo .+2
 171 003c 00C0      		rjmp .L10
 172 003e 8130      		cpi r24,1
 173 0040 9105      		cpc r25,__zero_reg__
 174 0042 01F4      		brne .+2
 175 0044 00C0      		rjmp .L8
 176 0046 0097      		sbiw r24,0
 177 0048 01F4      		brne .+2
 178 004a 00C0      		rjmp .L8
 179 004c 0497      		sbiw r24,4
 180 004e 00F0      		brlo .+2
 181 0050 00C0      		rjmp .L8
 182               	.LVL12:
 183               	.L31:
 163:quantum/keymap_common.c ****             break;
 184               		.loc 1 163 25 is_stmt 0 view .LVU31
 185 0052 D0E0      		ldi r29,0
 186 0054 C0E0      		ldi r28,0
 187               	.LVL13:
 163:quantum/keymap_common.c ****             break;
 188               		.loc 1 163 25 view .LVU32
 189 0056 00C0      		rjmp .L8
 190               	.LVL14:
 191               	.L9:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 192               		.loc 1 58 5 view .LVU33
 193 0058 8F3B      		cpi r24,-65
 194 005a 9105      		cpc r25,__zero_reg__
 195 005c 00F4      		brsh .L31
  68:quantum/keymap_common.c ****             break;
 196               		.loc 1 68 13 is_stmt 1 view .LVU34
 197               	.LVL15:
 198               	.LBB7:
 199               	.LBI7:
 200               		.file 2 "tmk_core/common/report.h"
   1:tmk_core/common/report.h **** /*
   2:tmk_core/common/report.h **** Copyright 2011,2012 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/report.h **** 
   4:tmk_core/common/report.h **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/report.h **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/report.h **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/report.h **** (at your option) any later version.
   8:tmk_core/common/report.h **** 
   9:tmk_core/common/report.h **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/report.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/report.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/report.h **** GNU General Public License for more details.
  13:tmk_core/common/report.h **** 
  14:tmk_core/common/report.h **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/report.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/report.h **** */
  17:tmk_core/common/report.h **** 
  18:tmk_core/common/report.h **** #pragma once
  19:tmk_core/common/report.h **** 
  20:tmk_core/common/report.h **** #include <stdint.h>
  21:tmk_core/common/report.h **** #include <stdbool.h>
  22:tmk_core/common/report.h **** #include "keycode.h"
  23:tmk_core/common/report.h **** 
  24:tmk_core/common/report.h **** // clang-format off
  25:tmk_core/common/report.h **** 
  26:tmk_core/common/report.h **** /* HID report IDs */
  27:tmk_core/common/report.h **** enum hid_report_ids {
  28:tmk_core/common/report.h ****     REPORT_ID_KEYBOARD = 1,
  29:tmk_core/common/report.h ****     REPORT_ID_MOUSE,
  30:tmk_core/common/report.h ****     REPORT_ID_SYSTEM,
  31:tmk_core/common/report.h ****     REPORT_ID_CONSUMER,
  32:tmk_core/common/report.h ****     REPORT_ID_NKRO,
  33:tmk_core/common/report.h ****     REPORT_ID_JOYSTICK
  34:tmk_core/common/report.h **** };
  35:tmk_core/common/report.h **** 
  36:tmk_core/common/report.h **** /* Mouse buttons */
  37:tmk_core/common/report.h **** enum mouse_buttons {
  38:tmk_core/common/report.h ****     MOUSE_BTN1 = (1 << 0),
  39:tmk_core/common/report.h ****     MOUSE_BTN2 = (1 << 1),
  40:tmk_core/common/report.h ****     MOUSE_BTN3 = (1 << 2),
  41:tmk_core/common/report.h ****     MOUSE_BTN4 = (1 << 3),
  42:tmk_core/common/report.h ****     MOUSE_BTN5 = (1 << 4)
  43:tmk_core/common/report.h **** };
  44:tmk_core/common/report.h **** 
  45:tmk_core/common/report.h **** /* Consumer Page (0x0C)
  46:tmk_core/common/report.h ****  *
  47:tmk_core/common/report.h ****  * See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf#page=75
  48:tmk_core/common/report.h ****  */
  49:tmk_core/common/report.h **** enum consumer_usages {
  50:tmk_core/common/report.h ****     // 15.5 Display Controls
  51:tmk_core/common/report.h ****     SNAPSHOT               = 0x065,
  52:tmk_core/common/report.h ****     BRIGHTNESS_UP          = 0x06F, // https://www.usb.org/sites/default/files/hutrr41_0.pdf
  53:tmk_core/common/report.h ****     BRIGHTNESS_DOWN        = 0x070,
  54:tmk_core/common/report.h ****     // 15.7 Transport Controls
  55:tmk_core/common/report.h ****     TRANSPORT_RECORD       = 0x0B2,
  56:tmk_core/common/report.h ****     TRANSPORT_FAST_FORWARD = 0x0B3,
  57:tmk_core/common/report.h ****     TRANSPORT_REWIND       = 0x0B4,
  58:tmk_core/common/report.h ****     TRANSPORT_NEXT_TRACK   = 0x0B5,
  59:tmk_core/common/report.h ****     TRANSPORT_PREV_TRACK   = 0x0B6,
  60:tmk_core/common/report.h ****     TRANSPORT_STOP         = 0x0B7,
  61:tmk_core/common/report.h ****     TRANSPORT_EJECT        = 0x0B8,
  62:tmk_core/common/report.h ****     TRANSPORT_RANDOM_PLAY  = 0x0B9,
  63:tmk_core/common/report.h ****     TRANSPORT_STOP_EJECT   = 0x0CC,
  64:tmk_core/common/report.h ****     TRANSPORT_PLAY_PAUSE   = 0x0CD,
  65:tmk_core/common/report.h ****     // 15.9.1 Audio Controls - Volume
  66:tmk_core/common/report.h ****     AUDIO_MUTE             = 0x0E2,
  67:tmk_core/common/report.h ****     AUDIO_VOL_UP           = 0x0E9,
  68:tmk_core/common/report.h ****     AUDIO_VOL_DOWN         = 0x0EA,
  69:tmk_core/common/report.h ****     // 15.15 Application Launch Buttons
  70:tmk_core/common/report.h ****     AL_CC_CONFIG           = 0x183,
  71:tmk_core/common/report.h ****     AL_EMAIL               = 0x18A,
  72:tmk_core/common/report.h ****     AL_CALCULATOR          = 0x192,
  73:tmk_core/common/report.h ****     AL_LOCAL_BROWSER       = 0x194,
  74:tmk_core/common/report.h ****     AL_LOCK                = 0x19E,
  75:tmk_core/common/report.h ****     AL_CONTROL_PANEL       = 0x19F,
  76:tmk_core/common/report.h ****     AL_ASSISTANT           = 0x1CB,
  77:tmk_core/common/report.h ****     AL_KEYBOARD_LAYOUT     = 0x1AE,
  78:tmk_core/common/report.h ****     // 15.16 Generic GUI Application Controls
  79:tmk_core/common/report.h ****     AC_MINIMIZE            = 0x206,
  80:tmk_core/common/report.h ****     AC_SEARCH              = 0x221,
  81:tmk_core/common/report.h ****     AC_HOME                = 0x223,
  82:tmk_core/common/report.h ****     AC_BACK                = 0x224,
  83:tmk_core/common/report.h ****     AC_FORWARD             = 0x225,
  84:tmk_core/common/report.h ****     AC_STOP                = 0x226,
  85:tmk_core/common/report.h ****     AC_REFRESH             = 0x227,
  86:tmk_core/common/report.h ****     AC_BOOKMARKS           = 0x22A
  87:tmk_core/common/report.h **** };
  88:tmk_core/common/report.h **** 
  89:tmk_core/common/report.h **** /* Generic Desktop Page (0x01)
  90:tmk_core/common/report.h ****  *
  91:tmk_core/common/report.h ****  * See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf#page=26
  92:tmk_core/common/report.h ****  */
  93:tmk_core/common/report.h **** enum desktop_usages {
  94:tmk_core/common/report.h ****     // 4.5.1 System Controls - Power Controls
  95:tmk_core/common/report.h ****     SYSTEM_POWER_DOWN = 0x81,
  96:tmk_core/common/report.h ****     SYSTEM_SLEEP      = 0x82,
  97:tmk_core/common/report.h ****     SYSTEM_WAKE_UP    = 0x83
  98:tmk_core/common/report.h **** };
  99:tmk_core/common/report.h **** 
 100:tmk_core/common/report.h **** // clang-format on
 101:tmk_core/common/report.h **** 
 102:tmk_core/common/report.h **** #define NKRO_SHARED_EP
 103:tmk_core/common/report.h **** /* key report size(NKRO or boot mode) */
 104:tmk_core/common/report.h **** #if defined(NKRO_ENABLE)
 105:tmk_core/common/report.h **** #    if defined(PROTOCOL_LUFA) || defined(PROTOCOL_CHIBIOS)
 106:tmk_core/common/report.h **** #        include "protocol/usb_descriptor.h"
 107:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (SHARED_EPSIZE - 2)
 108:tmk_core/common/report.h **** #    elif defined(PROTOCOL_ARM_ATSAM)
 109:tmk_core/common/report.h **** #        include "protocol/arm_atsam/usb/udi_device_epsize.h"
 110:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (NKRO_EPSIZE - 1)
 111:tmk_core/common/report.h **** #        undef NKRO_SHARED_EP
 112:tmk_core/common/report.h **** #        undef MOUSE_SHARED_EP
 113:tmk_core/common/report.h **** #    else
 114:tmk_core/common/report.h **** #        error "NKRO not supported with this protocol"
 115:tmk_core/common/report.h **** #    endif
 116:tmk_core/common/report.h **** #endif
 117:tmk_core/common/report.h **** 
 118:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 119:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 9
 120:tmk_core/common/report.h **** #else
 121:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 8
 122:tmk_core/common/report.h **** #endif
 123:tmk_core/common/report.h **** 
 124:tmk_core/common/report.h **** #define KEYBOARD_REPORT_KEYS 6
 125:tmk_core/common/report.h **** 
 126:tmk_core/common/report.h **** /* VUSB hardcodes keyboard and mouse+extrakey only */
 127:tmk_core/common/report.h **** #if defined(PROTOCOL_VUSB)
 128:tmk_core/common/report.h **** #    undef KEYBOARD_SHARED_EP
 129:tmk_core/common/report.h **** #    undef MOUSE_SHARED_EP
 130:tmk_core/common/report.h **** #endif
 131:tmk_core/common/report.h **** 
 132:tmk_core/common/report.h **** #ifdef __cplusplus
 133:tmk_core/common/report.h **** extern "C" {
 134:tmk_core/common/report.h **** #endif
 135:tmk_core/common/report.h **** 
 136:tmk_core/common/report.h **** /*
 137:tmk_core/common/report.h ****  * keyboard report is 8-byte array retains state of 8 modifiers and 6 keys.
 138:tmk_core/common/report.h ****  *
 139:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7
 140:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 141:tmk_core/common/report.h ****  * desc |mods    |reserved|keys[0] |keys[1] |keys[2] |keys[3] |keys[4] |keys[5]
 142:tmk_core/common/report.h ****  *
 143:tmk_core/common/report.h ****  * It is exended to 16 bytes to retain 120keys+8mods when NKRO mode.
 144:tmk_core/common/report.h ****  *
 145:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7        ... |15
 146:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------     +--------
 147:tmk_core/common/report.h ****  * desc |mods    |bits[0] |bits[1] |bits[2] |bits[3] |bits[4] |bits[5] |bits[6]  ... |bit[14]
 148:tmk_core/common/report.h ****  *
 149:tmk_core/common/report.h ****  * mods retains state of 8 modifiers.
 150:tmk_core/common/report.h ****  *
 151:tmk_core/common/report.h ****  *  bit |0       |1       |2       |3       |4       |5       |6       |7
 152:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 153:tmk_core/common/report.h ****  * desc |Lcontrol|Lshift  |Lalt    |Lgui    |Rcontrol|Rshift  |Ralt    |Rgui
 154:tmk_core/common/report.h ****  *
 155:tmk_core/common/report.h ****  */
 156:tmk_core/common/report.h **** typedef union {
 157:tmk_core/common/report.h ****     uint8_t raw[KEYBOARD_REPORT_SIZE];
 158:tmk_core/common/report.h ****     struct {
 159:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 160:tmk_core/common/report.h ****         uint8_t report_id;
 161:tmk_core/common/report.h **** #endif
 162:tmk_core/common/report.h ****         uint8_t mods;
 163:tmk_core/common/report.h ****         uint8_t reserved;
 164:tmk_core/common/report.h ****         uint8_t keys[KEYBOARD_REPORT_KEYS];
 165:tmk_core/common/report.h ****     };
 166:tmk_core/common/report.h **** #ifdef NKRO_ENABLE
 167:tmk_core/common/report.h ****     struct nkro_report {
 168:tmk_core/common/report.h **** #    ifdef NKRO_SHARED_EP
 169:tmk_core/common/report.h ****         uint8_t report_id;
 170:tmk_core/common/report.h **** #    endif
 171:tmk_core/common/report.h ****         uint8_t mods;
 172:tmk_core/common/report.h ****         uint8_t bits[KEYBOARD_REPORT_BITS];
 173:tmk_core/common/report.h ****     } nkro;
 174:tmk_core/common/report.h **** #endif
 175:tmk_core/common/report.h **** } __attribute__((packed)) report_keyboard_t;
 176:tmk_core/common/report.h **** 
 177:tmk_core/common/report.h **** typedef struct {
 178:tmk_core/common/report.h ****     uint8_t  report_id;
 179:tmk_core/common/report.h ****     uint16_t usage;
 180:tmk_core/common/report.h **** } __attribute__((packed)) report_extra_t;
 181:tmk_core/common/report.h **** 
 182:tmk_core/common/report.h **** typedef struct {
 183:tmk_core/common/report.h **** #ifdef MOUSE_SHARED_EP
 184:tmk_core/common/report.h ****     uint8_t report_id;
 185:tmk_core/common/report.h **** #endif
 186:tmk_core/common/report.h ****     uint8_t buttons;
 187:tmk_core/common/report.h ****     int8_t  x;
 188:tmk_core/common/report.h ****     int8_t  y;
 189:tmk_core/common/report.h ****     int8_t  v;
 190:tmk_core/common/report.h ****     int8_t  h;
 191:tmk_core/common/report.h **** } __attribute__((packed)) report_mouse_t;
 192:tmk_core/common/report.h **** 
 193:tmk_core/common/report.h **** typedef struct {
 194:tmk_core/common/report.h **** #if JOYSTICK_AXES_COUNT > 0
 195:tmk_core/common/report.h ****     int8_t axes[JOYSTICK_AXES_COUNT];
 196:tmk_core/common/report.h **** #endif
 197:tmk_core/common/report.h **** 
 198:tmk_core/common/report.h **** #if JOYSTICK_BUTTON_COUNT > 0
 199:tmk_core/common/report.h ****     uint8_t buttons[(JOYSTICK_BUTTON_COUNT - 1) / 8 + 1];
 200:tmk_core/common/report.h **** #endif
 201:tmk_core/common/report.h **** } __attribute__((packed)) joystick_report_t;
 202:tmk_core/common/report.h **** 
 203:tmk_core/common/report.h **** /* keycode to system usage */
 204:tmk_core/common/report.h **** static inline uint16_t KEYCODE2SYSTEM(uint8_t key) {
 205:tmk_core/common/report.h ****     switch (key) {
 206:tmk_core/common/report.h ****         case KC_SYSTEM_POWER:
 207:tmk_core/common/report.h ****             return SYSTEM_POWER_DOWN;
 208:tmk_core/common/report.h ****         case KC_SYSTEM_SLEEP:
 209:tmk_core/common/report.h ****             return SYSTEM_SLEEP;
 210:tmk_core/common/report.h ****         case KC_SYSTEM_WAKE:
 211:tmk_core/common/report.h ****             return SYSTEM_WAKE_UP;
 212:tmk_core/common/report.h ****         default:
 213:tmk_core/common/report.h ****             return 0;
 214:tmk_core/common/report.h ****     }
 215:tmk_core/common/report.h **** }
 216:tmk_core/common/report.h **** 
 217:tmk_core/common/report.h **** /* keycode to consumer usage */
 218:tmk_core/common/report.h **** static inline uint16_t KEYCODE2CONSUMER(uint8_t key) {
 201               		.loc 2 218 24 view .LVU35
 202               	.LBE7:
 219:tmk_core/common/report.h ****     switch (key) {
 203               		.loc 2 219 5 view .LVU36
  68:quantum/keymap_common.c ****             break;
 204               		.loc 1 68 27 is_stmt 0 view .LVU37
 205 005e C85A      		subi r28,lo8(-(88))
 206 0060 D0E0      		ldi r29,0
 207 0062 CC0F      		lsl r28
 208 0064 DD1F      		rol r29
 209 0066 C050      		subi r28,lo8(-(CSWTCH.1))
 210 0068 D040      		sbci r29,hi8(-(CSWTCH.1))
 211 006a 0990      		ld __tmp_reg__,Y+
 212 006c D881      		ld r29,Y
 213 006e C02D      		mov r28,__tmp_reg__
 214 0070 D464      		ori r29,68
 215               	.LVL16:
  69:quantum/keymap_common.c **** #endif
 216               		.loc 1 69 13 is_stmt 1 view .LVU38
 217 0072 00C0      		rjmp .L8
 218               	.LVL17:
 219               	.L7:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 220               		.loc 1 58 5 is_stmt 0 view .LVU39
 221 0074 8115      		cp r24,__zero_reg__
 222 0076 9042      		sbci r25,32
 223 0078 00F4      		brsh .L12
 224 007a C115      		cp r28,__zero_reg__
 225 007c 81E0      		ldi r24,1
 226 007e D807      		cpc r29,r24
 227               	.LVL18:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 228               		.loc 1 58 5 view .LVU40
 229 0080 00F0      		brlo .+2
 230 0082 00C0      		rjmp .L8
 231 0084 C03F      		cpi r28,-16
 232 0086 D105      		cpc r29,__zero_reg__
 233 0088 00F0      		brlo .L31
  73:quantum/keymap_common.c ****             break;
 234               		.loc 1 73 13 is_stmt 1 view .LVU41
  73:quantum/keymap_common.c ****             break;
 235               		.loc 1 73 27 is_stmt 0 view .LVU42
 236 008a D065      		ori r29,80
 237               	.LVL19:
  74:quantum/keymap_common.c **** #endif
 238               		.loc 1 74 13 is_stmt 1 view .LVU43
 239 008c 00C0      		rjmp .L8
 240               	.LVL20:
 241               	.L12:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 242               		.loc 1 58 5 is_stmt 0 view .LVU44
 243 008e C115      		cp r28,__zero_reg__
 244 0090 90E4      		ldi r25,64
 245 0092 D907      		cpc r29,r25
 246 0094 00F0      		brlo .L31
 104:quantum/keymap_common.c ****             break;
 247               		.loc 1 104 13 is_stmt 1 view .LVU45
 104:quantum/keymap_common.c ****             break;
 248               		.loc 1 104 27 is_stmt 0 view .LVU46
 249 0096 DF70      		andi r29,15
 250 0098 D06A      		ori r29,160
 251               	.LVL21:
 105:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 252               		.loc 1 105 13 is_stmt 1 view .LVU47
 253 009a 00C0      		rjmp .L8
 254               	.LVL22:
 255               	.L5:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 256               		.loc 1 58 5 is_stmt 0 view .LVU48
 257 009c 8115      		cp r24,__zero_reg__
 258 009e 25E5      		ldi r18,85
 259 00a0 9207      		cpc r25,r18
 260 00a2 00F4      		brsh .L15
 261 00a4 8115      		cp r24,__zero_reg__
 262 00a6 34E5      		ldi r19,84
 263 00a8 9307      		cpc r25,r19
 264 00aa 00F0      		brlo .+2
 265 00ac 00C0      		rjmp .L16
 266 00ae 8115      		cp r24,__zero_reg__
 267 00b0 43E5      		ldi r20,83
 268 00b2 9407      		cpc r25,r20
 269 00b4 00F0      		brlo .+2
 270 00b6 00C0      		rjmp .L17
 271 00b8 C115      		cp r28,__zero_reg__
 272 00ba 82E5      		ldi r24,82
 273 00bc D807      		cpc r29,r24
 274               	.LVL23:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 275               		.loc 1 58 5 view .LVU49
 276 00be 00F4      		brsh .+2
 277 00c0 00C0      		rjmp .L40
 117:quantum/keymap_common.c ****             // Set default action_layer
 278               		.loc 1 117 48 is_stmt 1 view .LVU50
 119:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 279               		.loc 1 119 13 view .LVU51
 280               	.LVL24:
 120:quantum/keymap_common.c ****             break;
 281               		.loc 1 120 13 view .LVU52
 120:quantum/keymap_common.c ****             break;
 282               		.loc 1 120 28 is_stmt 0 view .LVU53
 283 00c2 CE01      		movw r24,r28
 284 00c4 8370      		andi r24,3
 285 00c6 9927      		clr r25
 286 00c8 21E0      		ldi r18,lo8(1)
 287 00ca 30E0      		ldi r19,0
 288 00cc 00C0      		rjmp 2f
 289               		1:
 290 00ce 220F      		lsl r18
 291 00d0 331F      		rol r19
 292               		2:
 293 00d2 8A95      		dec r24
 294 00d4 02F4      		brpl 1b
 295 00d6 C695      		lsr r28
 296 00d8 C695      		lsr r28
 297               	.LVL25:
 120:quantum/keymap_common.c ****             break;
 298               		.loc 1 120 28 view .LVU54
 299 00da 80E2      		ldi r24,lo8(32)
 300 00dc C89F      		mul r28,r24
 301 00de E001      		movw r28,r0
 302 00e0 1124      		clr __zero_reg__
 303 00e2 00C0      		rjmp .L43
 304               	.LVL26:
 305               	.L15:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 306               		.loc 1 58 5 view .LVU55
 307 00e4 C115      		cp r28,__zero_reg__
 308 00e6 99E5      		ldi r25,89
 309 00e8 D907      		cpc r29,r25
 310 00ea 00F4      		brsh .L20
 311 00ec C115      		cp r28,__zero_reg__
 312 00ee 28E5      		ldi r18,88
 313 00f0 D207      		cpc r29,r18
 314 00f2 00F0      		brlo .+2
 315 00f4 00C0      		rjmp .L21
 316 00f6 C115      		cp r28,__zero_reg__
 317 00f8 36E5      		ldi r19,86
 318 00fa D307      		cpc r29,r19
 319 00fc 00F0      		brlo .+2
 320 00fe 00C0      		rjmp .L31
 134:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 321               		.loc 1 134 54 is_stmt 1 view .LVU56
 136:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 322               		.loc 1 136 13 view .LVU57
 136:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 323               		.loc 1 136 27 is_stmt 0 view .LVU58
 324 0100 8C2F      		mov r24,r28
 325               	.LVL27:
 136:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 326               		.loc 1 136 27 view .LVU59
 327 0102 0E94 0000 		call mod_config
 328               	.LVL28:
 137:quantum/keymap_common.c ****             break;
 329               		.loc 1 137 13 is_stmt 1 view .LVU60
 137:quantum/keymap_common.c ****             break;
 330               		.loc 1 137 27 is_stmt 0 view .LVU61
 331 0106 C82F      		mov r28,r24
 332               	.LVL29:
 137:quantum/keymap_common.c ****             break;
 333               		.loc 1 137 27 view .LVU62
 334 0108 D0E0      		ldi r29,0
 335 010a DC2F      		mov r29,r28
 336 010c CC27      		clr r28
 337 010e CC27      		clr r28
 338 0110 DF71      		andi r29,31
 339               	.LVL30:
 340               	.L44:
 153:quantum/keymap_common.c ****             break;
 341               		.loc 1 153 27 view .LVU63
 342 0112 D062      		ori r29,32
 343               	.LVL31:
 154:quantum/keymap_common.c **** #endif
 344               		.loc 1 154 13 is_stmt 1 view .LVU64
 345 0114 00C0      		rjmp .L8
 346               	.LVL32:
 347               	.L20:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 348               		.loc 1 58 5 is_stmt 0 view .LVU65
 349 0116 C115      		cp r28,__zero_reg__
 350 0118 4AE5      		ldi r20,90
 351 011a D407      		cpc r29,r20
 352 011c 00F4      		brsh .+2
 353 011e 00C0      		rjmp .L23
 354 0120 CE01      		movw r24,r28
 355               	.LVL33:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 356               		.loc 1 58 5 view .LVU66
 357 0122 9056      		subi r25,96
 358 0124 8115      		cp r24,__zero_reg__
 359 0126 9042      		sbci r25,32
 360 0128 00F0      		brlo .+2
 361 012a 00C0      		rjmp .L31
 152:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 362               		.loc 1 152 13 is_stmt 1 view .LVU67
 152:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 363               		.loc 1 152 27 is_stmt 0 view .LVU68
 364 012c 8D2F      		mov r24,r29
 365 012e 8F71      		andi r24,lo8(31)
 366 0130 0E94 0000 		call mod_config
 367               	.LVL34:
 153:quantum/keymap_common.c ****             break;
 368               		.loc 1 153 13 is_stmt 1 view .LVU69
 153:quantum/keymap_common.c ****             break;
 369               		.loc 1 153 27 is_stmt 0 view .LVU70
 370 0134 90E0      		ldi r25,0
 371 0136 982F      		mov r25,r24
 372 0138 8827      		clr r24
 373               	.LVL35:
 153:quantum/keymap_common.c ****             break;
 374               		.loc 1 153 27 view .LVU71
 375 013a 8827      		clr r24
 376 013c 9F71      		andi r25,31
 377 013e 9C01      		movw r18,r24
 378 0140 2C2B      		or r18,r28
 379 0142 E901      		movw r28,r18
 380               	.LVL36:
 153:quantum/keymap_common.c ****             break;
 381               		.loc 1 153 27 view .LVU72
 382 0144 00C0      		rjmp .L44
 383               	.LVL37:
 384               	.L10:
  65:quantum/keymap_common.c ****             break;
 385               		.loc 1 65 13 is_stmt 1 view .LVU73
 386               	.LBB8:
 387               	.LBI8:
 204:tmk_core/common/report.h ****     switch (key) {
 388               		.loc 2 204 24 view .LVU74
 389               	.LBE8:
 205:tmk_core/common/report.h ****         case KC_SYSTEM_POWER:
 390               		.loc 2 205 5 view .LVU75
  65:quantum/keymap_common.c ****             break;
 391               		.loc 1 65 27 is_stmt 0 view .LVU76
 392 0146 C55A      		subi r28,lo8(-(91))
 393 0148 D0E0      		ldi r29,0
 394 014a C050      		subi r28,lo8(-(CSWTCH.0))
 395 014c D040      		sbci r29,hi8(-(CSWTCH.0))
 396 014e C881      		ld r28,Y
 397 0150 D0E0      		ldi r29,0
 398 0152 D064      		ori r29,64
 399               	.LVL38:
  66:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
 400               		.loc 1 66 13 is_stmt 1 view .LVU77
 401               	.L8:
 166:quantum/keymap_common.c **** }
 402               		.loc 1 166 5 view .LVU78
 167:quantum/keymap_common.c **** 
 403               		.loc 1 167 1 is_stmt 0 view .LVU79
 404 0154 CE01      		movw r24,r28
 405               	/* epilogue start */
 406 0156 DF91      		pop r29
 407 0158 CF91      		pop r28
 408 015a 0895      		ret
 409               	.LVL39:
 410               	.L6:
 106:quantum/keymap_common.c ****             // Layer set "GOTO"
 411               		.loc 1 106 34 is_stmt 1 view .LVU80
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 412               		.loc 1 108 13 view .LVU81
 109:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 413               		.loc 1 109 13 view .LVU82
 110:quantum/keymap_common.c ****             break;
 414               		.loc 1 110 13 view .LVU83
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 415               		.loc 1 108 37 is_stmt 0 view .LVU84
 416 015c E4E0      		ldi r30,4
 417               		1:
 418 015e 9695      		lsr r25
 419 0160 8795      		ror r24
 420 0162 EA95      		dec r30
 421 0164 01F4      		brne 1b
 422               	.LVL40:
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 423               		.loc 1 108 26 view .LVU85
 424 0166 8370      		andi r24,lo8(3)
 110:quantum/keymap_common.c ****             break;
 425               		.loc 1 110 28 view .LVU86
 426 0168 2C2F      		mov r18,r28
 427 016a 2695      		lsr r18
 428 016c 2695      		lsr r18
 429 016e 2370      		andi r18,lo8(3)
 430 0170 40E2      		ldi r20,lo8(32)
 431 0172 249F      		mul r18,r20
 432 0174 9001      		movw r18,r0
 433 0176 1124      		clr __zero_reg__
 434 0178 382B      		or r19,r24
 435 017a 8C2F      		mov r24,r28
 436 017c 8370      		andi r24,lo8(3)
 437 017e C1E0      		ldi r28,lo8(1)
 438 0180 D0E0      		ldi r29,0
 439               	.LVL41:
 110:quantum/keymap_common.c ****             break;
 440               		.loc 1 110 28 view .LVU87
 441 0182 00C0      		rjmp 2f
 442               		1:
 443 0184 CC0F      		lsl r28
 444 0186 DD1F      		rol r29
 445               		2:
 446 0188 8A95      		dec r24
 447 018a 02F4      		brpl 1b
 448               	.L43:
 120:quantum/keymap_common.c ****             break;
 449               		.loc 1 120 28 view .LVU88
 450 018c C22B      		or r28,r18
 451 018e D32B      		or r29,r19
 452 0190 DC68      		ori r29,140
 453               	.LVL42:
 121:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 454               		.loc 1 121 13 is_stmt 1 view .LVU89
 455 0192 00C0      		rjmp .L8
 456               	.LVL43:
 457               	.L40:
 112:quantum/keymap_common.c ****             // Momentary action_layer
 458               		.loc 1 112 48 view .LVU90
 114:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 459               		.loc 1 114 13 view .LVU91
 115:quantum/keymap_common.c ****             break;
 460               		.loc 1 115 13 view .LVU92
 115:quantum/keymap_common.c ****             break;
 461               		.loc 1 115 28 is_stmt 0 view .LVU93
 462 0194 DC2F      		mov r29,r28
 463 0196 CC27      		clr r28
 464               	.LVL44:
 115:quantum/keymap_common.c ****             break;
 465               		.loc 1 115 28 view .LVU94
 466 0198 C16F      		ori r28,241
 467 019a D06A      		ori r29,160
 468               	.LVL45:
 116:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 469               		.loc 1 116 13 is_stmt 1 view .LVU95
 470 019c 00C0      		rjmp .L8
 471               	.LVL46:
 472               	.L17:
 122:quantum/keymap_common.c ****             // Set toggle
 473               		.loc 1 122 54 view .LVU96
 124:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 474               		.loc 1 124 13 view .LVU97
 125:quantum/keymap_common.c ****             break;
 475               		.loc 1 125 13 view .LVU98
 125:quantum/keymap_common.c ****             break;
 476               		.loc 1 125 28 is_stmt 0 view .LVU99
 477 019e 8370      		andi r24,3
 478 01a0 9927      		clr r25
 479               	.LVL47:
 125:quantum/keymap_common.c ****             break;
 480               		.loc 1 125 28 view .LVU100
 481 01a2 21E0      		ldi r18,lo8(1)
 482 01a4 30E0      		ldi r19,0
 483 01a6 00C0      		rjmp 2f
 484               		1:
 485 01a8 220F      		lsl r18
 486 01aa 331F      		rol r19
 487               		2:
 488 01ac 8A95      		dec r24
 489 01ae 02F4      		brpl 1b
 490 01b0 C695      		lsr r28
 491 01b2 C695      		lsr r28
 492               	.LVL48:
 125:quantum/keymap_common.c ****             break;
 493               		.loc 1 125 28 view .LVU101
 494 01b4 90E2      		ldi r25,lo8(32)
 495 01b6 C99F      		mul r28,r25
 496 01b8 E001      		movw r28,r0
 497 01ba 1124      		clr __zero_reg__
 498 01bc C22B      		or r28,r18
 499 01be D32B      		or r29,r19
 500 01c0 DA68      		ori r29,138
 501               	.LVL49:
 126:quantum/keymap_common.c **** #endif
 502               		.loc 1 126 13 is_stmt 1 view .LVU102
 503 01c2 00C0      		rjmp .L8
 504               	.LVL50:
 505               	.L16:
 129:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 506               		.loc 1 129 58 view .LVU103
 131:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 507               		.loc 1 131 13 view .LVU104
 132:quantum/keymap_common.c ****             break;
 508               		.loc 1 132 13 view .LVU105
 132:quantum/keymap_common.c ****             break;
 509               		.loc 1 132 28 is_stmt 0 view .LVU106
 510 01c4 D82F      		mov r29,r24
 511 01c6 CC27      		clr r28
 512 01c8 C46F      		ori r28,244
 513 01ca D06A      		ori r29,160
 514               	.LVL51:
 133:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 515               		.loc 1 133 13 is_stmt 1 view .LVU107
 516 01cc 00C0      		rjmp .L8
 517               	.LVL52:
 518               	.L21:
 142:quantum/keymap_common.c ****             break;
 519               		.loc 1 142 13 view .LVU108
 142:quantum/keymap_common.c ****             break;
 520               		.loc 1 142 27 is_stmt 0 view .LVU109
 521 01ce DC2F      		mov r29,r28
 522 01d0 CC27      		clr r28
 523 01d2 C06F      		ori r28,240
 524 01d4 D06A      		ori r29,160
 525               	.LVL53:
 143:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 526               		.loc 1 143 13 is_stmt 1 view .LVU110
 527 01d6 00C0      		rjmp .L8
 528               	.LVL54:
 529               	.L23:
 145:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 530               		.loc 1 145 13 view .LVU111
 145:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 531               		.loc 1 145 28 is_stmt 0 view .LVU112
 532 01d8 8C2F      		mov r24,r28
 533               	.LVL55:
 145:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 534               		.loc 1 145 28 view .LVU113
 535 01da 8F70      		andi r24,lo8(15)
 536 01dc 0E94 0000 		call mod_config
 537               	.LVL56:
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 538               		.loc 1 146 13 is_stmt 1 view .LVU114
 147:quantum/keymap_common.c ****             break;
 539               		.loc 1 147 13 view .LVU115
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 540               		.loc 1 146 37 is_stmt 0 view .LVU116
 541 01e0 34E0      		ldi r19,4
 542               		1:
 543 01e2 D695      		lsr r29
 544 01e4 C795      		ror r28
 545 01e6 3A95      		dec r19
 546 01e8 01F4      		brne 1b
 547               	.LVL57:
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 548               		.loc 1 146 26 view .LVU117
 549 01ea CF70      		andi r28,lo8(15)
 147:quantum/keymap_common.c ****             break;
 550               		.loc 1 147 28 view .LVU118
 551 01ec 9C2F      		mov r25,r28
 552 01ee EC01      		movw r28,r24
 553 01f0 D069      		ori r29,144
 554               	.LVL58:
 148:quantum/keymap_common.c **** #endif
 555               		.loc 1 148 13 is_stmt 1 view .LVU119
 556 01f2 00C0      		rjmp .L8
 557               		.cfi_endproc
 558               	.LFE20:
 560               		.section	.text.keymap_function_id_to_action,"ax",@progbits
 561               		.weak	keymap_function_id_to_action
 563               	keymap_function_id_to_action:
 564               	.LVL59:
 565               	.LFB24:
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates function id to action
 186:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_function_id_to_action(uint16_t function_id) {
 566               		.loc 1 186 83 view -0
 567               		.cfi_startproc
 568               	/* prologue: function */
 569               	/* frame size = 0 */
 570               	/* stack size = 0 */
 571               	.L__stack_usage = 0
 187:quantum/keymap_common.c **** // The compiler sees the empty (weak) fn_actions and generates a warning
 188:quantum/keymap_common.c **** // This function should not be called in that case, so the warning is too strict
 189:quantum/keymap_common.c **** // If this function is called however, the keymap should have overridden fn_actions, and then the c
 190:quantum/keymap_common.c **** // is comparing against the wrong array
 191:quantum/keymap_common.c **** #pragma GCC diagnostic push
 192:quantum/keymap_common.c **** #pragma GCC diagnostic ignored "-Warray-bounds"
 193:quantum/keymap_common.c ****     return pgm_read_word(&fn_actions[function_id]);
 572               		.loc 1 193 5 view .LVU121
 573               	.LBB9:
 574               		.loc 1 193 12 view .LVU122
 575 0000 FC01      		movw r30,r24
 576 0002 EE0F      		lsl r30
 577 0004 FF1F      		rol r31
 578               	.LVL60:
 579               		.loc 1 193 12 is_stmt 0 view .LVU123
 580 0006 E050      		subi r30,lo8(-(fn_actions))
 581 0008 F040      		sbci r31,hi8(-(fn_actions))
 582               	.LVL61:
 583               		.loc 1 193 12 is_stmt 1 view .LVU124
 584               		.loc 1 193 12 view .LVU125
 585               	/* #APP */
 586               	 ;  193 "quantum/keymap_common.c" 1
 587 000a 8591      		lpm r24, Z+
 588 000c 9491      		lpm r25, Z
 589               		
 590               	 ;  0 "" 2
 591               	.LVL62:
 592               		.loc 1 193 12 view .LVU126
 593               	/* #NOAPP */
 594               	/* epilogue start */
 595               	.LBE9:
 194:quantum/keymap_common.c **** #pragma GCC diagnostic pop
 195:quantum/keymap_common.c **** }
 596               		.loc 1 195 1 is_stmt 0 view .LVU127
 597 000e 0895      		ret
 598               		.cfi_endproc
 599               	.LFE24:
 601               		.section	.rodata.CSWTCH.1,"a"
 604               	CSWTCH.1:
 605 0000 E200      		.word	226
 606 0002 E900      		.word	233
 607 0004 EA00      		.word	234
 608 0006 B500      		.word	181
 609 0008 B600      		.word	182
 610 000a B700      		.word	183
 611 000c CD00      		.word	205
 612 000e 8301      		.word	387
 613 0010 CC00      		.word	204
 614 0012 8A01      		.word	394
 615 0014 9201      		.word	402
 616 0016 9401      		.word	404
 617 0018 2102      		.word	545
 618 001a 2302      		.word	547
 619 001c 2402      		.word	548
 620 001e 2502      		.word	549
 621 0020 2602      		.word	550
 622 0022 2702      		.word	551
 623 0024 2A02      		.word	554
 624 0026 B300      		.word	179
 625 0028 B400      		.word	180
 626 002a 6F00      		.word	111
 627 002c 7000      		.word	112
 628               		.section	.rodata.CSWTCH.0,"a"
 631               	CSWTCH.0:
 632 0000 81        		.byte	-127
 633 0001 82        		.byte	-126
 634 0002 83        		.byte	-125
 635               		.weak	fn_actions
 636               		.section	.progmem.data.fn_actions,"a"
 639               	fn_actions:
 640               		.text
 641               	.Letext0:
 642               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdint.h"
 643               		.file 4 "tmk_core/common/keyboard.h"
 644               		.file 5 "tmk_core/common/keycode.h"
 645               		.file 6 "tmk_core/common/action_code.h"
 646               		.file 7 "/usr/local/Cellar/avr-gcc@8/8.4.0/lib/avr-gcc/8/gcc/avr/8.4.0/include/stddef.h"
 647               		.file 8 "tmk_core/common/action_macro.h"
 648               		.file 9 "tmk_core/common/action.h"
 649               		.file 10 "tmk_core/common/host.h"
 650               		.file 11 "tmk_core/common/avr/xprintf.h"
 651               		.file 12 "tmk_core/common/debug.h"
 652               		.file 13 "quantum/keycode_config.h"
 653               		.file 14 "quantum/quantum_keycodes.h"
 654               		.file 15 "quantum/keymap.h"
 655               		.file 16 "tmk_core/common/action_layer.h"
 656               		.file 17 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdio.h"
 657               		.file 18 "tmk_core/common/timer.h"
 658               		.file 19 "tmk_core/common/action_util.h"
 659               		.file 20 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdlib.h"
 660               		.file 21 "quantum/process_keycode/process_tap_dance.h"
 661               		.file 22 "quantum/quantum.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_common.c
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccQ6lJYE.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccQ6lJYE.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccQ6lJYE.s:4      *ABS*:000000000000003f __SREG__
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccQ6lJYE.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccQ6lJYE.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccQ6lJYE.s:13     .text.action_get_macro:0000000000000000 action_get_macro
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccQ6lJYE.s:37     .text.action_function:0000000000000000 action_function
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccQ6lJYE.s:56     .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccQ6lJYE.s:113    .text.action_for_key:0000000000000000 action_for_key
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccQ6lJYE.s:604    .rodata.CSWTCH.1:0000000000000000 CSWTCH.1
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccQ6lJYE.s:631    .rodata.CSWTCH.0:0000000000000000 CSWTCH.0
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccQ6lJYE.s:563    .text.keymap_function_id_to_action:0000000000000000 keymap_function_id_to_action
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccQ6lJYE.s:639    .progmem.data.fn_actions:0000000000000000 fn_actions

UNDEFINED SYMBOLS
keymaps
keycode_config
mod_config
__do_copy_data
