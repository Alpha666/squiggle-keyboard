   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.disable_jtag,"ax",@progbits
  11               	.global	disable_jtag
  13               	disable_jtag:
  14               	.LFB6:
  15               		.file 1 "tmk_core/common/keyboard.c"
   1:tmk_core/common/keyboard.c **** /*
   2:tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/keyboard.c **** 
   4:tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/keyboard.c **** (at your option) any later version.
   8:tmk_core/common/keyboard.c **** 
   9:tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:tmk_core/common/keyboard.c **** 
  14:tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/keyboard.c **** */
  17:tmk_core/common/keyboard.c **** 
  18:tmk_core/common/keyboard.c **** #include <stdint.h>
  19:tmk_core/common/keyboard.c **** #include "keyboard.h"
  20:tmk_core/common/keyboard.c **** #include "matrix.h"
  21:tmk_core/common/keyboard.c **** #include "keymap.h"
  22:tmk_core/common/keyboard.c **** #include "host.h"
  23:tmk_core/common/keyboard.c **** #include "led.h"
  24:tmk_core/common/keyboard.c **** #include "keycode.h"
  25:tmk_core/common/keyboard.c **** #include "timer.h"
  26:tmk_core/common/keyboard.c **** #include "print.h"
  27:tmk_core/common/keyboard.c **** #include "debug.h"
  28:tmk_core/common/keyboard.c **** #include "command.h"
  29:tmk_core/common/keyboard.c **** #include "util.h"
  30:tmk_core/common/keyboard.c **** #include "sendchar.h"
  31:tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  34:tmk_core/common/keyboard.c **** #    include "backlight.h"
  35:tmk_core/common/keyboard.c **** #endif
  36:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  37:tmk_core/common/keyboard.c **** #    include "bootmagic.h"
  38:tmk_core/common/keyboard.c **** #else
  39:tmk_core/common/keyboard.c **** #    include "magic.h"
  40:tmk_core/common/keyboard.c **** #endif
  41:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  42:tmk_core/common/keyboard.c **** #    include "mousekey.h"
  43:tmk_core/common/keyboard.c **** #endif
  44:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  45:tmk_core/common/keyboard.c **** #    include "ps2_mouse.h"
  46:tmk_core/common/keyboard.c **** #endif
  47:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  48:tmk_core/common/keyboard.c **** #    include "serial_mouse.h"
  49:tmk_core/common/keyboard.c **** #endif
  50:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  51:tmk_core/common/keyboard.c **** #    include "adb.h"
  52:tmk_core/common/keyboard.c **** #endif
  53:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  54:tmk_core/common/keyboard.c **** #    include "rgblight.h"
  55:tmk_core/common/keyboard.c **** #endif
  56:tmk_core/common/keyboard.c **** #ifdef ENCODER_ENABLE
  57:tmk_core/common/keyboard.c **** #    include "encoder.h"
  58:tmk_core/common/keyboard.c **** #endif
  59:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
  60:tmk_core/common/keyboard.c **** #    include "process_steno.h"
  61:tmk_core/common/keyboard.c **** #endif
  62:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
  63:tmk_core/common/keyboard.c **** #    include "fauxclicky.h"
  64:tmk_core/common/keyboard.c **** #endif
  65:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  66:tmk_core/common/keyboard.c **** #    include "serial_link/system/serial_link.h"
  67:tmk_core/common/keyboard.c **** #endif
  68:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  69:tmk_core/common/keyboard.c **** #    include "visualizer/visualizer.h"
  70:tmk_core/common/keyboard.c **** #endif
  71:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
  72:tmk_core/common/keyboard.c **** #    include "pointing_device.h"
  73:tmk_core/common/keyboard.c **** #endif
  74:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
  75:tmk_core/common/keyboard.c **** #    include "process_midi.h"
  76:tmk_core/common/keyboard.c **** #endif
  77:tmk_core/common/keyboard.c **** #ifdef JOYSTICK_ENABLE
  78:tmk_core/common/keyboard.c **** #    include "process_joystick.h"
  79:tmk_core/common/keyboard.c **** #endif
  80:tmk_core/common/keyboard.c **** #ifdef HD44780_ENABLE
  81:tmk_core/common/keyboard.c **** #    include "hd44780.h"
  82:tmk_core/common/keyboard.c **** #endif
  83:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
  84:tmk_core/common/keyboard.c **** #    include "qwiic.h"
  85:tmk_core/common/keyboard.c **** #endif
  86:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
  87:tmk_core/common/keyboard.c **** #    include "oled_driver.h"
  88:tmk_core/common/keyboard.c **** #endif
  89:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
  90:tmk_core/common/keyboard.c **** #    include "velocikey.h"
  91:tmk_core/common/keyboard.c **** #endif
  92:tmk_core/common/keyboard.c **** #ifdef VIA_ENABLE
  93:tmk_core/common/keyboard.c **** #    include "via.h"
  94:tmk_core/common/keyboard.c **** #endif
  95:tmk_core/common/keyboard.c **** #ifdef DIP_SWITCH_ENABLE
  96:tmk_core/common/keyboard.c **** #    include "dip_switch.h"
  97:tmk_core/common/keyboard.c **** #endif
  98:tmk_core/common/keyboard.c **** 
  99:tmk_core/common/keyboard.c **** // Only enable this if console is enabled to print to
 100:tmk_core/common/keyboard.c **** #if defined(DEBUG_MATRIX_SCAN_RATE) && defined(CONSOLE_ENABLE)
 101:tmk_core/common/keyboard.c **** static uint32_t matrix_timer      = 0;
 102:tmk_core/common/keyboard.c **** static uint32_t matrix_scan_count = 0;
 103:tmk_core/common/keyboard.c **** 
 104:tmk_core/common/keyboard.c **** void matrix_scan_perf_task(void) {
 105:tmk_core/common/keyboard.c ****     matrix_scan_count++;
 106:tmk_core/common/keyboard.c **** 
 107:tmk_core/common/keyboard.c ****     uint32_t timer_now = timer_read32();
 108:tmk_core/common/keyboard.c ****     if (TIMER_DIFF_32(timer_now, matrix_timer) > 1000) {
 109:tmk_core/common/keyboard.c ****         dprintf("matrix scan frequency: %d\n", matrix_scan_count);
 110:tmk_core/common/keyboard.c **** 
 111:tmk_core/common/keyboard.c ****         matrix_timer      = timer_now;
 112:tmk_core/common/keyboard.c ****         matrix_scan_count = 0;
 113:tmk_core/common/keyboard.c ****     }
 114:tmk_core/common/keyboard.c **** }
 115:tmk_core/common/keyboard.c **** #else
 116:tmk_core/common/keyboard.c **** #    define matrix_scan_perf_task()
 117:tmk_core/common/keyboard.c **** #endif
 118:tmk_core/common/keyboard.c **** 
 119:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 120:tmk_core/common/keyboard.c **** extern const uint16_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
 121:tmk_core/common/keyboard.c **** static matrix_row_t   get_real_keys(uint8_t row, matrix_row_t rowdata) {
 122:tmk_core/common/keyboard.c ****     matrix_row_t out = 0;
 123:tmk_core/common/keyboard.c ****     for (uint8_t col = 0; col < MATRIX_COLS; col++) {
 124:tmk_core/common/keyboard.c ****         // read each key in the row data and check if the keymap defines it as a real key
 125:tmk_core/common/keyboard.c ****         if (pgm_read_byte(&keymaps[0][row][col]) && (rowdata & (1 << col))) {
 126:tmk_core/common/keyboard.c ****             // this creates new row data, if a key is defined in the keymap, it will be set here
 127:tmk_core/common/keyboard.c ****             out |= 1 << col;
 128:tmk_core/common/keyboard.c ****         }
 129:tmk_core/common/keyboard.c ****     }
 130:tmk_core/common/keyboard.c ****     return out;
 131:tmk_core/common/keyboard.c **** }
 132:tmk_core/common/keyboard.c **** 
 133:tmk_core/common/keyboard.c **** static inline bool popcount_more_than_one(matrix_row_t rowdata) {
 134:tmk_core/common/keyboard.c ****     rowdata &= rowdata - 1;  // if there are less than two bits (keys) set, rowdata will become zer
 135:tmk_core/common/keyboard.c ****     return rowdata;
 136:tmk_core/common/keyboard.c **** }
 137:tmk_core/common/keyboard.c **** 
 138:tmk_core/common/keyboard.c **** static inline bool has_ghost_in_row(uint8_t row, matrix_row_t rowdata) {
 139:tmk_core/common/keyboard.c ****     /* No ghost exists when less than 2 keys are down on the row.
 140:tmk_core/common/keyboard.c ****     If there are "active" blanks in the matrix, the key can't be pressed by the user,
 141:tmk_core/common/keyboard.c ****     there is no doubt as to which keys are really being pressed.
 142:tmk_core/common/keyboard.c ****     The ghosts will be ignored, they are KC_NO.   */
 143:tmk_core/common/keyboard.c ****     rowdata = get_real_keys(row, rowdata);
 144:tmk_core/common/keyboard.c ****     if ((popcount_more_than_one(rowdata)) == 0) {
 145:tmk_core/common/keyboard.c ****         return false;
 146:tmk_core/common/keyboard.c ****     }
 147:tmk_core/common/keyboard.c ****     /* Ghost occurs when the row shares a column line with other row,
 148:tmk_core/common/keyboard.c ****     and two columns are read on each row. Blanks in the matrix don't matter,
 149:tmk_core/common/keyboard.c ****     so they are filtered out.
 150:tmk_core/common/keyboard.c ****     If there are two or more real keys pressed and they match columns with
 151:tmk_core/common/keyboard.c ****     at least two of another row's real keys, the row will be ignored. Keep in mind,
 152:tmk_core/common/keyboard.c ****     we are checking one row at a time, not all of them at once.
 153:tmk_core/common/keyboard.c ****     */
 154:tmk_core/common/keyboard.c ****     for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 155:tmk_core/common/keyboard.c ****         if (i != row && popcount_more_than_one(get_real_keys(i, matrix_get_row(i)) & rowdata)) {
 156:tmk_core/common/keyboard.c ****             return true;
 157:tmk_core/common/keyboard.c ****         }
 158:tmk_core/common/keyboard.c ****     }
 159:tmk_core/common/keyboard.c ****     return false;
 160:tmk_core/common/keyboard.c **** }
 161:tmk_core/common/keyboard.c **** 
 162:tmk_core/common/keyboard.c **** #endif
 163:tmk_core/common/keyboard.c **** 
 164:tmk_core/common/keyboard.c **** void disable_jtag(void) {
  16               		.loc 1 164 25 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 165:tmk_core/common/keyboard.c **** // To use PF4-7 (PC2-5 on ATmega32A), disable JTAG by writing JTD bit twice within four cycles.
 166:tmk_core/common/keyboard.c **** #if (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__) || defined(__AVR_AT90USB1286__) || 
 167:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
  22               		.loc 1 167 5 view .LVU1
  23               		.loc 1 167 11 is_stmt 0 view .LVU2
  24 0000 85B7      		in r24,0x35
  25 0002 8068      		ori r24,lo8(-128)
  26 0004 85BF      		out 0x35,r24
 168:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
  27               		.loc 1 168 5 is_stmt 1 view .LVU3
  28               		.loc 1 168 11 is_stmt 0 view .LVU4
  29 0006 85B7      		in r24,0x35
  30 0008 8068      		ori r24,lo8(-128)
  31 000a 85BF      		out 0x35,r24
  32               	/* epilogue start */
 169:tmk_core/common/keyboard.c **** #elif defined(__AVR_ATmega32A__)
 170:tmk_core/common/keyboard.c ****     MCUCSR |= _BV(JTD);
 171:tmk_core/common/keyboard.c ****     MCUCSR |= _BV(JTD);
 172:tmk_core/common/keyboard.c **** #endif
 173:tmk_core/common/keyboard.c **** }
  33               		.loc 1 173 1 view .LVU5
  34 000c 0895      		ret
  35               		.cfi_endproc
  36               	.LFE6:
  38               		.section	.text.keyboard_pre_init_user,"ax",@progbits
  39               		.weak	keyboard_pre_init_user
  41               	keyboard_pre_init_user:
  42               	.LFB8:
 174:tmk_core/common/keyboard.c **** 
 175:tmk_core/common/keyboard.c **** /** \brief matrix_setup
 176:tmk_core/common/keyboard.c ****  *
 177:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 178:tmk_core/common/keyboard.c ****  */
 179:tmk_core/common/keyboard.c **** __attribute__((weak)) void matrix_setup(void) {}
 180:tmk_core/common/keyboard.c **** 
 181:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_user
 182:tmk_core/common/keyboard.c ****  *
 183:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 184:tmk_core/common/keyboard.c ****  */
 185:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_user(void) {}
  43               		.loc 1 185 57 is_stmt 1 view -0
  44               		.cfi_startproc
  45               	/* prologue: function */
  46               	/* frame size = 0 */
  47               	/* stack size = 0 */
  48               	.L__stack_usage = 0
  49               		.loc 1 185 58 view .LVU7
  50               	/* epilogue start */
  51               		.loc 1 185 1 is_stmt 0 view .LVU8
  52 0000 0895      		ret
  53               		.cfi_endproc
  54               	.LFE8:
  56               		.set	keyboard_pre_init_user.localalias.0,keyboard_pre_init_user
  57               		.section	.text.matrix_setup,"ax",@progbits
  58               		.weak	matrix_setup
  60               	matrix_setup:
  61               	.LFB21:
  62               		.cfi_startproc
  63               	/* prologue: function */
  64               	/* frame size = 0 */
  65               	/* stack size = 0 */
  66               	.L__stack_usage = 0
  67               	/* epilogue start */
  68 0000 0895      		ret
  69               		.cfi_endproc
  70               	.LFE21:
  72               		.section	.text.keyboard_pre_init_kb,"ax",@progbits
  73               		.weak	keyboard_pre_init_kb
  75               	keyboard_pre_init_kb:
  76               	.LFB9:
 186:tmk_core/common/keyboard.c **** 
 187:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_kb
 188:tmk_core/common/keyboard.c ****  *
 189:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 190:tmk_core/common/keyboard.c ****  */
 191:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_kb(void) { keyboard_pre_init_user(); }
  77               		.loc 1 191 55 is_stmt 1 view -0
  78               		.cfi_startproc
  79               	/* prologue: function */
  80               	/* frame size = 0 */
  81               	/* stack size = 0 */
  82               	.L__stack_usage = 0
  83               		.loc 1 191 57 view .LVU10
  84 0000 0C94 0000 		jmp keyboard_pre_init_user
  85               	.LVL0:
  86               		.cfi_endproc
  87               	.LFE9:
  89               		.section	.text.keyboard_post_init_user,"ax",@progbits
  90               		.weak	keyboard_post_init_user
  92               	keyboard_post_init_user:
  93               	.LFB19:
  94               		.cfi_startproc
  95               	/* prologue: function */
  96               	/* frame size = 0 */
  97               	/* stack size = 0 */
  98               	.L__stack_usage = 0
  99               	/* epilogue start */
 100 0000 0895      		ret
 101               		.cfi_endproc
 102               	.LFE19:
 104               		.section	.text.keyboard_post_init_kb,"ax",@progbits
 105               		.weak	keyboard_post_init_kb
 107               	keyboard_post_init_kb:
 108               	.LFB11:
 192:tmk_core/common/keyboard.c **** 
 193:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_user
 194:tmk_core/common/keyboard.c ****  *
 195:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 196:tmk_core/common/keyboard.c ****  */
 197:tmk_core/common/keyboard.c **** 
 198:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_post_init_user() {}
 199:tmk_core/common/keyboard.c **** 
 200:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_kb
 201:tmk_core/common/keyboard.c ****  *
 202:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 203:tmk_core/common/keyboard.c ****  */
 204:tmk_core/common/keyboard.c **** 
 205:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_post_init_kb(void) { keyboard_post_init_user(); }
 109               		.loc 1 205 56 view -0
 110               		.cfi_startproc
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 0 */
 114               	.L__stack_usage = 0
 115               		.loc 1 205 58 view .LVU12
 116 0000 0C94 0000 		jmp keyboard_post_init_user
 117               	.LVL1:
 118               		.cfi_endproc
 119               	.LFE11:
 121               		.section	.text.keyboard_setup,"ax",@progbits
 122               	.global	keyboard_setup
 124               	keyboard_setup:
 125               	.LFB12:
 206:tmk_core/common/keyboard.c **** 
 207:tmk_core/common/keyboard.c **** /** \brief keyboard_setup
 208:tmk_core/common/keyboard.c ****  *
 209:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 210:tmk_core/common/keyboard.c ****  */
 211:tmk_core/common/keyboard.c **** void keyboard_setup(void) {
 126               		.loc 1 211 27 view -0
 127               		.cfi_startproc
 128               	/* prologue: function */
 129               	/* frame size = 0 */
 130               	/* stack size = 0 */
 131               	.L__stack_usage = 0
 212:tmk_core/common/keyboard.c **** #ifndef NO_JTAG_DISABLE
 213:tmk_core/common/keyboard.c ****     disable_jtag();
 132               		.loc 1 213 5 view .LVU14
 133 0000 0E94 0000 		call disable_jtag
 134               	.LVL2:
 214:tmk_core/common/keyboard.c **** #endif
 215:tmk_core/common/keyboard.c ****     matrix_setup();
 135               		.loc 1 215 5 view .LVU15
 136 0004 0E94 0000 		call matrix_setup
 137               	.LVL3:
 216:tmk_core/common/keyboard.c ****     keyboard_pre_init_kb();
 138               		.loc 1 216 5 view .LVU16
 139 0008 0C94 0000 		jmp keyboard_pre_init_kb
 140               	.LVL4:
 141               		.cfi_endproc
 142               	.LFE12:
 144               		.section	.text.is_keyboard_master,"ax",@progbits
 145               		.weak	is_keyboard_master
 147               	is_keyboard_master:
 148               	.LFB13:
 217:tmk_core/common/keyboard.c **** }
 218:tmk_core/common/keyboard.c **** 
 219:tmk_core/common/keyboard.c **** /** \brief is_keyboard_master
 220:tmk_core/common/keyboard.c ****  *
 221:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 222:tmk_core/common/keyboard.c ****  */
 223:tmk_core/common/keyboard.c **** __attribute__((weak)) bool is_keyboard_master(void) { return true; }
 149               		.loc 1 223 53 view -0
 150               		.cfi_startproc
 151               	/* prologue: function */
 152               	/* frame size = 0 */
 153               	/* stack size = 0 */
 154               	.L__stack_usage = 0
 155               		.loc 1 223 55 view .LVU18
 156               		.loc 1 223 1 is_stmt 0 view .LVU19
 157 0000 81E0      		ldi r24,lo8(1)
 158               	/* epilogue start */
 159 0002 0895      		ret
 160               		.cfi_endproc
 161               	.LFE13:
 163               		.section	.text.should_process_keypress,"ax",@progbits
 164               		.weak	should_process_keypress
 166               	should_process_keypress:
 167               	.LFB14:
 224:tmk_core/common/keyboard.c **** 
 225:tmk_core/common/keyboard.c **** /** \brief should_process_keypress
 226:tmk_core/common/keyboard.c ****  *
 227:tmk_core/common/keyboard.c ****  * Override this function if you have a condition where keypresses processing should change:
 228:tmk_core/common/keyboard.c ****  *   - splits where the slave side needs to process for rgb/oled functionality
 229:tmk_core/common/keyboard.c ****  */
 230:tmk_core/common/keyboard.c **** __attribute__((weak)) bool should_process_keypress(void) { return is_keyboard_master(); }
 168               		.loc 1 230 58 is_stmt 1 view -0
 169               		.cfi_startproc
 170               	/* prologue: function */
 171               	/* frame size = 0 */
 172               	/* stack size = 0 */
 173               	.L__stack_usage = 0
 174               		.loc 1 230 60 view .LVU21
 175               		.loc 1 230 67 is_stmt 0 view .LVU22
 176 0000 0C94 0000 		jmp is_keyboard_master
 177               	.LVL5:
 178               		.cfi_endproc
 179               	.LFE14:
 181               		.section	.text.keyboard_init,"ax",@progbits
 182               	.global	keyboard_init
 184               	keyboard_init:
 185               	.LFB15:
 231:tmk_core/common/keyboard.c **** 
 232:tmk_core/common/keyboard.c **** /** \brief keyboard_init
 233:tmk_core/common/keyboard.c ****  *
 234:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 235:tmk_core/common/keyboard.c ****  */
 236:tmk_core/common/keyboard.c **** void keyboard_init(void) {
 186               		.loc 1 236 26 is_stmt 1 view -0
 187               		.cfi_startproc
 188               	/* prologue: function */
 189               	/* frame size = 0 */
 190               	/* stack size = 0 */
 191               	.L__stack_usage = 0
 237:tmk_core/common/keyboard.c ****     timer_init();
 192               		.loc 1 237 5 view .LVU24
 193 0000 0E94 0000 		call timer_init
 194               	.LVL6:
 238:tmk_core/common/keyboard.c ****     matrix_init();
 195               		.loc 1 238 5 view .LVU25
 196 0004 0E94 0000 		call matrix_init
 197               	.LVL7:
 239:tmk_core/common/keyboard.c **** #ifdef VIA_ENABLE
 240:tmk_core/common/keyboard.c ****     via_init();
 241:tmk_core/common/keyboard.c **** #endif
 242:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 243:tmk_core/common/keyboard.c ****     qwiic_init();
 244:tmk_core/common/keyboard.c **** #endif
 245:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 246:tmk_core/common/keyboard.c ****     oled_init(OLED_ROTATION_0);
 247:tmk_core/common/keyboard.c **** #endif
 248:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 249:tmk_core/common/keyboard.c ****     ps2_mouse_init();
 250:tmk_core/common/keyboard.c **** #endif
 251:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 252:tmk_core/common/keyboard.c ****     serial_mouse_init();
 253:tmk_core/common/keyboard.c **** #endif
 254:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 255:tmk_core/common/keyboard.c ****     adb_mouse_init();
 256:tmk_core/common/keyboard.c **** #endif
 257:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 258:tmk_core/common/keyboard.c ****     bootmagic();
 259:tmk_core/common/keyboard.c **** #else
 260:tmk_core/common/keyboard.c ****     magic();
 198               		.loc 1 260 5 view .LVU26
 199 0008 0E94 0000 		call magic
 200               	.LVL8:
 261:tmk_core/common/keyboard.c **** #endif
 262:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 263:tmk_core/common/keyboard.c ****     backlight_init();
 264:tmk_core/common/keyboard.c **** #endif
 265:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 266:tmk_core/common/keyboard.c ****     rgblight_init();
 267:tmk_core/common/keyboard.c **** #endif
 268:tmk_core/common/keyboard.c **** #ifdef ENCODER_ENABLE
 269:tmk_core/common/keyboard.c ****     encoder_init();
 270:tmk_core/common/keyboard.c **** #endif
 271:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
 272:tmk_core/common/keyboard.c ****     steno_init();
 273:tmk_core/common/keyboard.c **** #endif
 274:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
 275:tmk_core/common/keyboard.c ****     fauxclicky_init();
 276:tmk_core/common/keyboard.c **** #endif
 277:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 278:tmk_core/common/keyboard.c ****     pointing_device_init();
 279:tmk_core/common/keyboard.c **** #endif
 280:tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 281:tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 282:tmk_core/common/keyboard.c ****     eeconfig_update_keymap(keymap_config.raw);
 283:tmk_core/common/keyboard.c **** #endif
 284:tmk_core/common/keyboard.c **** #ifdef DIP_SWITCH_ENABLE
 285:tmk_core/common/keyboard.c ****     dip_switch_init();
 286:tmk_core/common/keyboard.c **** #endif
 287:tmk_core/common/keyboard.c **** 
 288:tmk_core/common/keyboard.c ****     keyboard_post_init_kb(); /* Always keep this last */
 201               		.loc 1 288 5 view .LVU27
 202 000c 0C94 0000 		jmp keyboard_post_init_kb
 203               	.LVL9:
 204               		.cfi_endproc
 205               	.LFE15:
 207               		.section	.text.keyboard_set_leds,"ax",@progbits
 208               	.global	keyboard_set_leds
 210               	keyboard_set_leds:
 211               	.LVL10:
 212               	.LFB17:
 289:tmk_core/common/keyboard.c **** }
 290:tmk_core/common/keyboard.c **** 
 291:tmk_core/common/keyboard.c **** /** \brief Keyboard task: Do keyboard routine jobs
 292:tmk_core/common/keyboard.c ****  *
 293:tmk_core/common/keyboard.c ****  * Do routine keyboard jobs:
 294:tmk_core/common/keyboard.c ****  *
 295:tmk_core/common/keyboard.c ****  * * scan matrix
 296:tmk_core/common/keyboard.c ****  * * handle mouse movements
 297:tmk_core/common/keyboard.c ****  * * run visualizer code
 298:tmk_core/common/keyboard.c ****  * * handle midi commands
 299:tmk_core/common/keyboard.c ****  * * light LEDs
 300:tmk_core/common/keyboard.c ****  *
 301:tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 302:tmk_core/common/keyboard.c ****  */
 303:tmk_core/common/keyboard.c **** void keyboard_task(void) {
 304:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 305:tmk_core/common/keyboard.c ****     static uint8_t      led_status    = 0;
 306:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_row    = 0;
 307:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_change = 0;
 308:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 309:tmk_core/common/keyboard.c ****     uint8_t keys_processed = 0;
 310:tmk_core/common/keyboard.c **** #endif
 311:tmk_core/common/keyboard.c **** 
 312:tmk_core/common/keyboard.c **** #if defined(OLED_DRIVER_ENABLE) && !defined(OLED_DISABLE_TIMEOUT)
 313:tmk_core/common/keyboard.c ****     uint8_t ret = matrix_scan();
 314:tmk_core/common/keyboard.c **** #else
 315:tmk_core/common/keyboard.c ****     matrix_scan();
 316:tmk_core/common/keyboard.c **** #endif
 317:tmk_core/common/keyboard.c **** 
 318:tmk_core/common/keyboard.c ****     if (should_process_keypress()) {
 319:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 320:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 321:tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 322:tmk_core/common/keyboard.c ****             if (matrix_change) {
 323:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 324:tmk_core/common/keyboard.c ****                 if (has_ghost_in_row(r, matrix_row)) {
 325:tmk_core/common/keyboard.c ****                     continue;
 326:tmk_core/common/keyboard.c ****                 }
 327:tmk_core/common/keyboard.c **** #endif
 328:tmk_core/common/keyboard.c ****                 if (debug_matrix) matrix_print();
 329:tmk_core/common/keyboard.c ****                 matrix_row_t col_mask = 1;
 330:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 331:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 332:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 333:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 334:tmk_core/common/keyboard.c ****                         });
 335:tmk_core/common/keyboard.c ****                         // record a processed key
 336:tmk_core/common/keyboard.c ****                         matrix_prev[r] ^= col_mask;
 337:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 338:tmk_core/common/keyboard.c ****                         // only jump out if we have processed "enough" keys.
 339:tmk_core/common/keyboard.c ****                         if (++keys_processed >= QMK_KEYS_PER_SCAN)
 340:tmk_core/common/keyboard.c **** #endif
 341:tmk_core/common/keyboard.c ****                             // process a key per task call
 342:tmk_core/common/keyboard.c ****                             goto MATRIX_LOOP_END;
 343:tmk_core/common/keyboard.c ****                     }
 344:tmk_core/common/keyboard.c ****                 }
 345:tmk_core/common/keyboard.c ****             }
 346:tmk_core/common/keyboard.c ****         }
 347:tmk_core/common/keyboard.c ****     }
 348:tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 349:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 350:tmk_core/common/keyboard.c ****     // we can get here with some keys processed now.
 351:tmk_core/common/keyboard.c ****     if (!keys_processed)
 352:tmk_core/common/keyboard.c **** #endif
 353:tmk_core/common/keyboard.c ****         action_exec(TICK);
 354:tmk_core/common/keyboard.c **** 
 355:tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 356:tmk_core/common/keyboard.c **** 
 357:tmk_core/common/keyboard.c **** #ifdef DEBUG_MATRIX_SCAN_RATE
 358:tmk_core/common/keyboard.c ****     matrix_scan_perf_task();
 359:tmk_core/common/keyboard.c **** #endif
 360:tmk_core/common/keyboard.c **** 
 361:tmk_core/common/keyboard.c **** #if defined(RGBLIGHT_ENABLE)
 362:tmk_core/common/keyboard.c ****     rgblight_task();
 363:tmk_core/common/keyboard.c **** #endif
 364:tmk_core/common/keyboard.c **** 
 365:tmk_core/common/keyboard.c **** #if defined(BACKLIGHT_ENABLE)
 366:tmk_core/common/keyboard.c **** #    if defined(BACKLIGHT_PIN) || defined(BACKLIGHT_PINS)
 367:tmk_core/common/keyboard.c ****     backlight_task();
 368:tmk_core/common/keyboard.c **** #    endif
 369:tmk_core/common/keyboard.c **** #endif
 370:tmk_core/common/keyboard.c **** 
 371:tmk_core/common/keyboard.c **** #ifdef ENCODER_ENABLE
 372:tmk_core/common/keyboard.c ****     encoder_read();
 373:tmk_core/common/keyboard.c **** #endif
 374:tmk_core/common/keyboard.c **** 
 375:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 376:tmk_core/common/keyboard.c ****     qwiic_task();
 377:tmk_core/common/keyboard.c **** #endif
 378:tmk_core/common/keyboard.c **** 
 379:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 380:tmk_core/common/keyboard.c ****     oled_task();
 381:tmk_core/common/keyboard.c **** #    ifndef OLED_DISABLE_TIMEOUT
 382:tmk_core/common/keyboard.c ****     // Wake up oled if user is using those fabulous keys!
 383:tmk_core/common/keyboard.c ****     if (ret) oled_on();
 384:tmk_core/common/keyboard.c **** #    endif
 385:tmk_core/common/keyboard.c **** #endif
 386:tmk_core/common/keyboard.c **** 
 387:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 388:tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 389:tmk_core/common/keyboard.c ****     mousekey_task();
 390:tmk_core/common/keyboard.c **** #endif
 391:tmk_core/common/keyboard.c **** 
 392:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 393:tmk_core/common/keyboard.c ****     ps2_mouse_task();
 394:tmk_core/common/keyboard.c **** #endif
 395:tmk_core/common/keyboard.c **** 
 396:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 397:tmk_core/common/keyboard.c ****     serial_mouse_task();
 398:tmk_core/common/keyboard.c **** #endif
 399:tmk_core/common/keyboard.c **** 
 400:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 401:tmk_core/common/keyboard.c ****     adb_mouse_task();
 402:tmk_core/common/keyboard.c **** #endif
 403:tmk_core/common/keyboard.c **** 
 404:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 405:tmk_core/common/keyboard.c ****     serial_link_update();
 406:tmk_core/common/keyboard.c **** #endif
 407:tmk_core/common/keyboard.c **** 
 408:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 409:tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, visualizer_get_mods(), host_keyboard_leds()
 410:tmk_core/common/keyboard.c **** #endif
 411:tmk_core/common/keyboard.c **** 
 412:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 413:tmk_core/common/keyboard.c ****     pointing_device_task();
 414:tmk_core/common/keyboard.c **** #endif
 415:tmk_core/common/keyboard.c **** 
 416:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
 417:tmk_core/common/keyboard.c ****     midi_task();
 418:tmk_core/common/keyboard.c **** #endif
 419:tmk_core/common/keyboard.c **** 
 420:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
 421:tmk_core/common/keyboard.c ****     if (velocikey_enabled()) {
 422:tmk_core/common/keyboard.c ****         velocikey_decelerate();
 423:tmk_core/common/keyboard.c ****     }
 424:tmk_core/common/keyboard.c **** #endif
 425:tmk_core/common/keyboard.c **** 
 426:tmk_core/common/keyboard.c **** #ifdef JOYSTICK_ENABLE
 427:tmk_core/common/keyboard.c ****     joystick_task();
 428:tmk_core/common/keyboard.c **** #endif
 429:tmk_core/common/keyboard.c **** 
 430:tmk_core/common/keyboard.c ****     // update LED
 431:tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 432:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 433:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 434:tmk_core/common/keyboard.c ****     }
 435:tmk_core/common/keyboard.c **** }
 436:tmk_core/common/keyboard.c **** 
 437:tmk_core/common/keyboard.c **** /** \brief keyboard set leds
 438:tmk_core/common/keyboard.c ****  *
 439:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 440:tmk_core/common/keyboard.c ****  */
 441:tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds) {
 213               		.loc 1 441 38 view -0
 214               		.cfi_startproc
 215               		.loc 1 441 38 is_stmt 0 view .LVU29
 216 0000 CF93      		push r28
 217               	.LCFI0:
 218               		.cfi_def_cfa_offset 3
 219               		.cfi_offset 28, -2
 220               	/* prologue: function */
 221               	/* frame size = 0 */
 222               	/* stack size = 1 */
 223               	.L__stack_usage = 1
 224 0002 C82F      		mov r28,r24
 442:tmk_core/common/keyboard.c ****     if (debug_keyboard) {
 225               		.loc 1 442 5 is_stmt 1 view .LVU30
 226               		.loc 1 442 9 is_stmt 0 view .LVU31
 227 0004 8091 0000 		lds r24,debug_config
 228               	.LVL11:
 229               		.loc 1 442 8 view .LVU32
 230 0008 82FF      		sbrs r24,2
 231 000a 00C0      		rjmp .L14
 443:tmk_core/common/keyboard.c ****         debug("keyboard_set_led: ");
 232               		.loc 1 443 9 is_stmt 1 view .LVU33
 233               		.loc 1 443 9 view .LVU34
 234 000c 80FF      		sbrs r24,0
 235 000e 00C0      		rjmp .L14
 236               		.loc 1 443 9 discriminator 1 view .LVU35
 237               	.LBB2:
 238               		.loc 1 443 9 discriminator 1 view .LVU36
 239               		.loc 1 443 9 discriminator 1 view .LVU37
 240               	.LBE2:
 241 0010 80E0      		ldi r24,lo8(__c.3042)
 242 0012 90E0      		ldi r25,hi8(__c.3042)
 243 0014 0E94 0000 		call xputs
 244               	.LVL12:
 245               		.loc 1 443 9 discriminator 1 view .LVU38
 444:tmk_core/common/keyboard.c ****         debug_hex8(leds);
 246               		.loc 1 444 9 discriminator 1 view .LVU39
 247               		.loc 1 444 9 discriminator 1 view .LVU40
 248 0018 8091 0000 		lds r24,debug_config
 249 001c 80FF      		sbrs r24,0
 250 001e 00C0      		rjmp .L14
 251               		.loc 1 444 9 discriminator 1 view .LVU41
 252               	.LBB3:
 253               		.loc 1 444 9 discriminator 1 view .LVU42
 254               		.loc 1 444 9 discriminator 1 view .LVU43
 255               	.LBE3:
 256 0020 1F92      		push __zero_reg__
 257               	.LCFI1:
 258               		.cfi_def_cfa_offset 4
 259 0022 CF93      		push r28
 260               	.LCFI2:
 261               		.cfi_def_cfa_offset 5
 262 0024 80E0      		ldi r24,lo8(__c.3044)
 263 0026 90E0      		ldi r25,hi8(__c.3044)
 264 0028 9F93      		push r25
 265               	.LCFI3:
 266               		.cfi_def_cfa_offset 6
 267 002a 8F93      		push r24
 268               	.LCFI4:
 269               		.cfi_def_cfa_offset 7
 270 002c 0E94 0000 		call __xprintf
 271               	.LVL13:
 272               		.loc 1 444 9 discriminator 1 view .LVU44
 445:tmk_core/common/keyboard.c ****         debug("\n");
 273               		.loc 1 445 9 discriminator 1 view .LVU45
 274               		.loc 1 445 9 discriminator 1 view .LVU46
 275 0030 8091 0000 		lds r24,debug_config
 276 0034 0F90      		pop __tmp_reg__
 277 0036 0F90      		pop __tmp_reg__
 278 0038 0F90      		pop __tmp_reg__
 279 003a 0F90      		pop __tmp_reg__
 280               	.LCFI5:
 281               		.cfi_def_cfa_offset 3
 282 003c 80FF      		sbrs r24,0
 283 003e 00C0      		rjmp .L14
 284               		.loc 1 445 9 discriminator 1 view .LVU47
 285               	.LBB4:
 286               		.loc 1 445 9 discriminator 1 view .LVU48
 287               		.loc 1 445 9 discriminator 1 view .LVU49
 288               	.LBE4:
 289 0040 80E0      		ldi r24,lo8(__c.3046)
 290 0042 90E0      		ldi r25,hi8(__c.3046)
 291 0044 0E94 0000 		call xputs
 292               	.LVL14:
 293               	.L14:
 294               		.loc 1 445 9 discriminator 3 view .LVU50
 446:tmk_core/common/keyboard.c ****     }
 447:tmk_core/common/keyboard.c ****     led_set(leds);
 295               		.loc 1 447 5 discriminator 3 view .LVU51
 296 0048 8C2F      		mov r24,r28
 297               	/* epilogue start */
 448:tmk_core/common/keyboard.c **** }
 298               		.loc 1 448 1 is_stmt 0 discriminator 3 view .LVU52
 299 004a CF91      		pop r28
 300               	.LVL15:
 447:tmk_core/common/keyboard.c **** }
 301               		.loc 1 447 5 discriminator 3 view .LVU53
 302 004c 0C94 0000 		jmp led_set
 303               	.LVL16:
 447:tmk_core/common/keyboard.c **** }
 304               		.loc 1 447 5 discriminator 3 view .LVU54
 305               		.cfi_endproc
 306               	.LFE17:
 308               		.section	.text.keyboard_task,"ax",@progbits
 309               	.global	keyboard_task
 311               	keyboard_task:
 312               	.LFB16:
 303:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 313               		.loc 1 303 26 is_stmt 1 view -0
 314               		.cfi_startproc
 315 0000 BF92      		push r11
 316               	.LCFI6:
 317               		.cfi_def_cfa_offset 3
 318               		.cfi_offset 11, -2
 319 0002 CF92      		push r12
 320               	.LCFI7:
 321               		.cfi_def_cfa_offset 4
 322               		.cfi_offset 12, -3
 323 0004 DF92      		push r13
 324               	.LCFI8:
 325               		.cfi_def_cfa_offset 5
 326               		.cfi_offset 13, -4
 327 0006 EF92      		push r14
 328               	.LCFI9:
 329               		.cfi_def_cfa_offset 6
 330               		.cfi_offset 14, -5
 331 0008 FF92      		push r15
 332               	.LCFI10:
 333               		.cfi_def_cfa_offset 7
 334               		.cfi_offset 15, -6
 335 000a 0F93      		push r16
 336               	.LCFI11:
 337               		.cfi_def_cfa_offset 8
 338               		.cfi_offset 16, -7
 339 000c 1F93      		push r17
 340               	.LCFI12:
 341               		.cfi_def_cfa_offset 9
 342               		.cfi_offset 17, -8
 343 000e CF93      		push r28
 344               	.LCFI13:
 345               		.cfi_def_cfa_offset 10
 346               		.cfi_offset 28, -9
 347 0010 DF93      		push r29
 348               	.LCFI14:
 349               		.cfi_def_cfa_offset 11
 350               		.cfi_offset 29, -10
 351 0012 CDB7      		in r28,__SP_L__
 352 0014 DEB7      		in r29,__SP_H__
 353               	.LCFI15:
 354               		.cfi_def_cfa_register 28
 355 0016 2A97      		sbiw r28,10
 356               	.LCFI16:
 357               		.cfi_def_cfa_offset 21
 358 0018 0FB6      		in __tmp_reg__,__SREG__
 359 001a F894      		cli
 360 001c DEBF      		out __SP_H__,r29
 361 001e 0FBE      		out __SREG__,__tmp_reg__
 362 0020 CDBF      		out __SP_L__,r28
 363               	/* prologue: function */
 364               	/* frame size = 10 */
 365               	/* stack size = 19 */
 366               	.L__stack_usage = 19
 304:tmk_core/common/keyboard.c ****     static uint8_t      led_status    = 0;
 367               		.loc 1 304 5 view .LVU56
 305:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_row    = 0;
 368               		.loc 1 305 5 view .LVU57
 306:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_change = 0;
 369               		.loc 1 306 5 view .LVU58
 370               	.LVL17:
 307:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 371               		.loc 1 307 5 view .LVU59
 315:tmk_core/common/keyboard.c **** #endif
 372               		.loc 1 315 5 view .LVU60
 373 0022 0E94 0000 		call matrix_scan
 374               	.LVL18:
 318:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 375               		.loc 1 318 5 view .LVU61
 318:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 376               		.loc 1 318 9 is_stmt 0 view .LVU62
 377 0026 0E94 0000 		call should_process_keypress
 378               	.LVL19:
 318:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 379               		.loc 1 318 8 view .LVU63
 380 002a 8823      		tst r24
 381 002c 01F4      		brne .+2
 382 002e 00C0      		rjmp .L28
 383 0030 80E0      		ldi r24,lo8(matrix_prev.3021)
 384 0032 C82E      		mov r12,r24
 385 0034 80E0      		ldi r24,hi8(matrix_prev.3021)
 386 0036 D82E      		mov r13,r24
 387 0038 10E0      		ldi r17,0
 388 003a 00E0      		ldi r16,0
 389               	.LVL20:
 390               	.L35:
 318:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 391               		.loc 1 318 8 view .LVU64
 392 003c B02E      		mov r11,r16
 393               	.LVL21:
 394               	.LBB5:
 320:tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 395               		.loc 1 320 13 is_stmt 1 view .LVU65
 320:tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 396               		.loc 1 320 29 is_stmt 0 view .LVU66
 397 003e 802F      		mov r24,r16
 398 0040 0E94 0000 		call matrix_get_row
 399               	.LVL22:
 400 0044 E82E      		mov r14,r24
 401               	.LVL23:
 321:tmk_core/common/keyboard.c ****             if (matrix_change) {
 402               		.loc 1 321 13 is_stmt 1 view .LVU67
 321:tmk_core/common/keyboard.c ****             if (matrix_change) {
 403               		.loc 1 321 53 is_stmt 0 view .LVU68
 404 0046 F601      		movw r30,r12
 405 0048 F190      		ld r15,Z+
 406 004a 6F01      		movw r12,r30
 407               	.LVL24:
 322:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 408               		.loc 1 322 13 is_stmt 1 view .LVU69
 322:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 409               		.loc 1 322 16 is_stmt 0 view .LVU70
 410 004c F816      		cp r15,r24
 411 004e 01F4      		brne .+2
 412 0050 00C0      		rjmp .L29
 413               	.LBB6:
 328:tmk_core/common/keyboard.c ****                 matrix_row_t col_mask = 1;
 414               		.loc 1 328 17 is_stmt 1 view .LVU71
 328:tmk_core/common/keyboard.c ****                 matrix_row_t col_mask = 1;
 415               		.loc 1 328 21 is_stmt 0 view .LVU72
 416 0052 8091 0000 		lds r24,debug_config
 328:tmk_core/common/keyboard.c ****                 matrix_row_t col_mask = 1;
 417               		.loc 1 328 20 view .LVU73
 418 0056 81FD      		sbrc r24,1
 328:tmk_core/common/keyboard.c ****                 matrix_row_t col_mask = 1;
 419               		.loc 1 328 35 is_stmt 1 discriminator 1 view .LVU74
 420 0058 0E94 0000 		call matrix_print
 421               	.LVL25:
 422               	.L30:
 423               	.LBE6:
 321:tmk_core/common/keyboard.c ****             if (matrix_change) {
 424               		.loc 1 321 27 is_stmt 0 view .LVU75
 425 005c 9F2D      		mov r25,r15
 426 005e 9E25      		eor r25,r14
 427               	.LBB10:
 329:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 428               		.loc 1 329 17 is_stmt 1 view .LVU76
 429               	.LVL26:
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 430               		.loc 1 330 17 view .LVU77
 431               	.LBB7:
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 432               		.loc 1 330 22 view .LVU78
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 433               		.loc 1 330 37 view .LVU79
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 434               		.loc 1 330 30 is_stmt 0 view .LVU80
 435 0060 80E0      		ldi r24,0
 436               	.LBE7:
 329:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 437               		.loc 1 329 30 view .LVU81
 438 0062 FF24      		clr r15
 439 0064 F394      		inc r15
 440               	.LVL27:
 441               	.L34:
 442               	.LBB8:
 331:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 443               		.loc 1 331 21 is_stmt 1 view .LVU82
 331:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 444               		.loc 1 331 25 is_stmt 0 view .LVU83
 445 0066 292F      		mov r18,r25
 446 0068 2F21      		and r18,r15
 331:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 447               		.loc 1 331 24 view .LVU84
 448 006a 01F0      		breq .L31
 332:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 449               		.loc 1 332 25 is_stmt 1 view .LVU85
 332:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 450               		.loc 1 332 49 is_stmt 0 view .LVU86
 451 006c 8E83      		std Y+6,r24
 452 006e BF82      		std Y+7,r11
 333:tmk_core/common/keyboard.c ****                         });
 453               		.loc 1 333 91 view .LVU87
 454 0070 EF20      		and r14,r15
 455               	.LVL28:
 333:tmk_core/common/keyboard.c ****                         });
 456               		.loc 1 333 91 view .LVU88
 457 0072 81E0      		ldi r24,lo8(1)
 458               	.LVL29:
 333:tmk_core/common/keyboard.c ****                         });
 459               		.loc 1 333 91 view .LVU89
 460 0074 01F4      		brne .L32
 461 0076 80E0      		ldi r24,0
 462               	.L32:
 332:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 463               		.loc 1 332 49 view .LVU90
 464 0078 8887      		std Y+8,r24
 333:tmk_core/common/keyboard.c ****                         });
 465               		.loc 1 333 113 view .LVU91
 466 007a 0E94 0000 		call timer_read
 467               	.LVL30:
 333:tmk_core/common/keyboard.c ****                         });
 468               		.loc 1 333 126 view .LVU92
 469 007e 8160      		ori r24,1
 332:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 470               		.loc 1 332 49 view .LVU93
 471 0080 782F      		mov r23,r24
 472 0082 9A87      		std Y+10,r25
 473 0084 8987      		std Y+9,r24
 332:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 474               		.loc 1 332 25 view .LVU94
 475 0086 4E81      		ldd r20,Y+6
 476 0088 5F81      		ldd r21,Y+7
 477 008a 6885      		ldd r22,Y+8
 478 008c 8A85      		ldd r24,Y+10
 479 008e 0E94 0000 		call action_exec
 480               	.LVL31:
 336:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 481               		.loc 1 336 25 is_stmt 1 view .LVU95
 336:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 482               		.loc 1 336 40 is_stmt 0 view .LVU96
 483 0092 F801      		movw r30,r16
 484 0094 E050      		subi r30,lo8(-(matrix_prev.3021))
 485 0096 F040      		sbci r31,hi8(-(matrix_prev.3021))
 486 0098 8081      		ld r24,Z
 487 009a F826      		eor r15,r24
 488               	.LVL32:
 336:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 489               		.loc 1 336 40 view .LVU97
 490 009c F082      		st Z,r15
 342:tmk_core/common/keyboard.c ****                     }
 491               		.loc 1 342 29 is_stmt 1 view .LVU98
 492               	.LVL33:
 493               	.L33:
 342:tmk_core/common/keyboard.c ****                     }
 494               		.loc 1 342 29 is_stmt 0 view .LVU99
 495               	.LBE8:
 496               	.LBE10:
 497               	.LBE5:
 389:tmk_core/common/keyboard.c **** #endif
 498               		.loc 1 389 5 is_stmt 1 view .LVU100
 499 009e 0E94 0000 		call mousekey_task
 500               	.LVL34:
 431:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 501               		.loc 1 431 5 view .LVU101
 431:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 502               		.loc 1 431 23 is_stmt 0 view .LVU102
 503 00a2 0E94 0000 		call host_keyboard_leds
 504               	.LVL35:
 431:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 505               		.loc 1 431 8 view .LVU103
 506 00a6 9091 0000 		lds r25,led_status.3022
 507 00aa 8917      		cp r24,r25
 508 00ac 01F0      		breq .L27
 432:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 509               		.loc 1 432 9 is_stmt 1 view .LVU104
 432:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 510               		.loc 1 432 22 is_stmt 0 view .LVU105
 511 00ae 0E94 0000 		call host_keyboard_leds
 512               	.LVL36:
 432:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 513               		.loc 1 432 20 view .LVU106
 514 00b2 8093 0000 		sts led_status.3022,r24
 433:tmk_core/common/keyboard.c ****     }
 515               		.loc 1 433 9 is_stmt 1 view .LVU107
 516               	/* epilogue start */
 435:tmk_core/common/keyboard.c **** 
 517               		.loc 1 435 1 is_stmt 0 view .LVU108
 518 00b6 2A96      		adiw r28,10
 519 00b8 0FB6      		in __tmp_reg__,__SREG__
 520 00ba F894      		cli
 521 00bc DEBF      		out __SP_H__,r29
 522 00be 0FBE      		out __SREG__,__tmp_reg__
 523 00c0 CDBF      		out __SP_L__,r28
 524 00c2 DF91      		pop r29
 525 00c4 CF91      		pop r28
 526 00c6 1F91      		pop r17
 527 00c8 0F91      		pop r16
 528 00ca FF90      		pop r15
 529 00cc EF90      		pop r14
 530 00ce DF90      		pop r13
 531 00d0 CF90      		pop r12
 532 00d2 BF90      		pop r11
 433:tmk_core/common/keyboard.c ****     }
 533               		.loc 1 433 9 view .LVU109
 534 00d4 0C94 0000 		jmp keyboard_set_leds
 535               	.LVL37:
 536               	.L31:
 537               	.LBB12:
 538               	.LBB11:
 539               	.LBB9:
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 540               		.loc 1 330 54 is_stmt 1 discriminator 2 view .LVU110
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 541               		.loc 1 330 55 is_stmt 0 discriminator 2 view .LVU111
 542 00d8 8F5F      		subi r24,lo8(-(1))
 543               	.LVL38:
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 544               		.loc 1 330 68 discriminator 2 view .LVU112
 545 00da FF0C      		lsl r15
 546               	.LVL39:
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 547               		.loc 1 330 37 is_stmt 1 discriminator 2 view .LVU113
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 548               		.loc 1 330 17 is_stmt 0 discriminator 2 view .LVU114
 549 00dc 8530      		cpi r24,lo8(5)
 550 00de 01F4      		brne .L34
 551               	.LVL40:
 552               	.L29:
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 553               		.loc 1 330 17 discriminator 2 view .LVU115
 554               	.LBE9:
 555               	.LBE11:
 319:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 556               		.loc 1 319 46 is_stmt 1 view .LVU116
 319:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 557               		.loc 1 319 29 view .LVU117
 558 00e0 0F5F      		subi r16,-1
 559 00e2 1F4F      		sbci r17,-1
 560               	.LVL41:
 319:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 561               		.loc 1 319 9 is_stmt 0 view .LVU118
 562 00e4 0830      		cpi r16,8
 563 00e6 1105      		cpc r17,__zero_reg__
 564 00e8 01F0      		breq .+2
 565 00ea 00C0      		rjmp .L35
 566               	.LVL42:
 567               	.L28:
 319:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 568               		.loc 1 319 9 view .LVU119
 569               	.LBE12:
 353:tmk_core/common/keyboard.c **** 
 570               		.loc 1 353 9 is_stmt 1 view .LVU120
 353:tmk_core/common/keyboard.c **** 
 571               		.loc 1 353 21 is_stmt 0 view .LVU121
 572 00ec 8FEF      		ldi r24,lo8(-1)
 573 00ee 8983      		std Y+1,r24
 574 00f0 8A83      		std Y+2,r24
 575 00f2 1B82      		std Y+3,__zero_reg__
 576 00f4 0E94 0000 		call timer_read
 577               	.LVL43:
 578 00f8 8160      		ori r24,1
 579 00fa 782F      		mov r23,r24
 580 00fc 9D83      		std Y+5,r25
 581 00fe 8C83      		std Y+4,r24
 353:tmk_core/common/keyboard.c **** 
 582               		.loc 1 353 9 view .LVU122
 583 0100 4981      		ldd r20,Y+1
 584 0102 5A81      		ldd r21,Y+2
 585 0104 6B81      		ldd r22,Y+3
 586 0106 8D81      		ldd r24,Y+5
 587 0108 0E94 0000 		call action_exec
 588               	.LVL44:
 589 010c 00C0      		rjmp .L33
 590               	.L27:
 591               	/* epilogue start */
 435:tmk_core/common/keyboard.c **** 
 592               		.loc 1 435 1 view .LVU123
 593 010e 2A96      		adiw r28,10
 594 0110 0FB6      		in __tmp_reg__,__SREG__
 595 0112 F894      		cli
 596 0114 DEBF      		out __SP_H__,r29
 597 0116 0FBE      		out __SREG__,__tmp_reg__
 598 0118 CDBF      		out __SP_L__,r28
 599 011a DF91      		pop r29
 600 011c CF91      		pop r28
 601 011e 1F91      		pop r17
 602 0120 0F91      		pop r16
 603 0122 FF90      		pop r15
 604 0124 EF90      		pop r14
 605 0126 DF90      		pop r13
 606 0128 CF90      		pop r12
 607 012a BF90      		pop r11
 608 012c 0895      		ret
 609               		.cfi_endproc
 610               	.LFE16:
 612               		.section	.progmem.data.__c.3046,"a"
 615               	__c.3046:
 616 0000 0A00      		.string	"\n"
 617               		.section	.progmem.data.__c.3044,"a"
 620               	__c.3044:
 621 0000 2530 3258 		.string	"%02X"
 621      00
 622               		.section	.progmem.data.__c.3042,"a"
 625               	__c.3042:
 626 0000 6B65 7962 		.string	"keyboard_set_led: "
 626      6F61 7264 
 626      5F73 6574 
 626      5F6C 6564 
 626      3A20 00
 627               		.section	.bss.led_status.3022,"aw",@nobits
 630               	led_status.3022:
 631 0000 00        		.zero	1
 632               		.section	.bss.matrix_prev.3021,"aw",@nobits
 635               	matrix_prev.3021:
 636 0000 0000 0000 		.zero	8
 636      0000 0000 
 637               		.text
 638               	.Letext0:
 639               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdint.h"
 640               		.file 3 "tmk_core/common/keyboard.h"
 641               		.file 4 "tmk_core/common/matrix.h"
 642               		.file 5 "tmk_core/common/action.h"
 643               		.file 6 "tmk_core/common/host.h"
 644               		.file 7 "tmk_core/common/avr/xprintf.h"
 645               		.file 8 "tmk_core/common/debug.h"
 646               		.file 9 "quantum/keycode_config.h"
 647               		.file 10 "quantum/keymap.h"
 648               		.file 11 "tmk_core/common/timer.h"
 649               		.file 12 "tmk_core/common/command.h"
 650               		.file 13 "tmk_core/common/action_layer.h"
 651               		.file 14 "tmk_core/common/mousekey.h"
 652               		.file 15 "tmk_core/common/led.h"
 653               		.file 16 "tmk_core/common/magic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:4      *ABS*:000000000000003f __SREG__
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:13     .text.disable_jtag:0000000000000000 disable_jtag
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:41     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:41     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user.localalias.0
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:60     .text.matrix_setup:0000000000000000 matrix_setup
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:75     .text.keyboard_pre_init_kb:0000000000000000 keyboard_pre_init_kb
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:92     .text.keyboard_post_init_user:0000000000000000 keyboard_post_init_user
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:107    .text.keyboard_post_init_kb:0000000000000000 keyboard_post_init_kb
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:124    .text.keyboard_setup:0000000000000000 keyboard_setup
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:147    .text.is_keyboard_master:0000000000000000 is_keyboard_master
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:166    .text.should_process_keypress:0000000000000000 should_process_keypress
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:184    .text.keyboard_init:0000000000000000 keyboard_init
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:210    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:625    .progmem.data.__c.3042:0000000000000000 __c.3042
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:620    .progmem.data.__c.3044:0000000000000000 __c.3044
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:615    .progmem.data.__c.3046:0000000000000000 __c.3046
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:311    .text.keyboard_task:0000000000000000 keyboard_task
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:635    .bss.matrix_prev.3021:0000000000000000 matrix_prev.3021
/var/folders/7y/kbn66ztx1rs80r6yv6v16f4r0000gn/T//ccBsisw2.s:630    .bss.led_status.3022:0000000000000000 led_status.3022

UNDEFINED SYMBOLS
timer_init
matrix_init
magic
debug_config
xputs
__xprintf
led_set
matrix_scan
matrix_get_row
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
__do_clear_bss
